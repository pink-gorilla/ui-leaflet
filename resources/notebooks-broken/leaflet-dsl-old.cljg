;; gorilla-repl.fileformat = 2

;; @@ [meta]
{}

;; @@

;; **
;;; ## todo: refactor reagent map library n gorilla-ui to be compatible with old geo library
;;; 
;;; # leaflet-gorilla
;;; 
;;; 2019-10-17 awb99: Ported from Gorilla REPL to Pink GorillaRepl.
;;; 
;;; leaflet-gorilla is a renderer for Gorilla REPL that lets you put data on maps using the [Leaflet](http://leafletjs.com/) javascript library.
;;; 
;;; ## Setup
;;; 
;;; First create the namespace and require the leaflet-gorilla code:
;; **

;; @@ [clj]
(ns gentle-shelter)
(use '[pinkgorilla.helper])
(pinkgorilla.helper/add-dependencies '[org.pinkgorilla/gorilla-leaflet "0.2.6"]) 
;; @@
;; =>
;;; ["^ ","~:type","list-like","~:open",["span",["^ ","~:class","clj-map"],"{"],"~:close",["span",["^ ","^2","clj-map"],"}"],"~:separator",["span",", "],"~:items",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","~:content",["span",["^ ","^2","clj-symbol"],"org.pinkgorilla/gorilla-leaflet"],"~:value","org.pinkgorilla/gorilla-leaflet"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.2.6\""],"^7","\"0.2.6\""]],"^7","[org.pinkgorilla/gorilla-leaflet \"0.2.6\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-set"],"#{"],"^3",["span",["^ ","^2","clj-set"],"}"],"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/data.json"],"^7","org.clojure/data.json"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.2.6\""],"^7","\"0.2.6\""]],"^7","[org.clojure/data.json \"0.2.6\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/clojure"],"^7","org.clojure/clojure"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.10.1\""],"^7","\"1.10.1\""]],"^7","[org.clojure/clojure \"1.10.1\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.pinkgorilla/gorilla-renderable"],"^7","org.pinkgorilla/gorilla-renderable"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"3.0.0\""],"^7","\"3.0.0\""]],"^7","[org.pinkgorilla/gorilla-renderable \"3.0.0\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"selmer"],"^7","selmer"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.8.9\""],"^7","\"0.8.9\""]],"^7","[selmer \"0.8.9\"]"]],"^7","#{[org.clojure/data.json \"0.2.6\"] [org.clojure/clojure \"1.10.1\"] [org.pinkgorilla/gorilla-renderable \"3.0.0\"] [selmer \"0.8.9\"]}"]],"^7","[[org.pinkgorilla/gorilla-leaflet \"0.2.6\"] #{[org.clojure/data.json \"0.2.6\"] [org.clojure/clojure \"1.10.1\"] [org.pinkgorilla/gorilla-renderable \"3.0.0\"] [selmer \"0.8.9\"]}]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/tools.reader"],"^7","org.clojure/tools.reader"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.8.4\""],"^7","\"0.8.4\""]],"^7","[org.clojure/tools.reader \"0.8.4\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[org.clojure/tools.reader \"0.8.4\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"tigris"],"^7","tigris"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.1.1\""],"^7","\"0.1.1\""]],"^7","[tigris \"0.1.1\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[tigris \"0.1.1\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"hiccups"],"^7","hiccups"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.3.0\""],"^7","\"0.3.0\""]],"^7","[hiccups \"0.3.0\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[hiccups \"0.3.0\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.fasterxml.jackson.dataformat/jackson-dataformat-smile"],"^7","com.fasterxml.jackson.dataformat/jackson-dataformat-smile"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"2.5.3\""],"^7","\"2.5.3\""]],"^7","[com.fasterxml.jackson.dataformat/jackson-dataformat-smile \"2.5.3\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[com.fasterxml.jackson.dataformat/jackson-dataformat-smile \"2.5.3\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/google-closure-library-third-party"],"^7","org.clojure/google-closure-library-third-party"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.0-20140718-946a7d39\""],"^7","\"0.0-20140718-946a7d39\""]],"^7","[org.clojure/google-closure-library-third-party \"0.0-20140718-946a7d39\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[org.clojure/google-closure-library-third-party \"0.0-20140718-946a7d39\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.google.guava/guava"],"^7","com.google.guava/guava"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"17.0\""],"^7","\"17.0\""]],"^7","[com.google.guava/guava \"17.0\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[com.google.guava/guava \"17.0\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"joda-time"],"^7","joda-time"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"2.8.1\""],"^7","\"2.8.1\""]],"^7","[joda-time \"2.8.1\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[joda-time \"2.8.1\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"args4j"],"^7","args4j"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"2.0.26\""],"^7","\"2.0.26\""]],"^7","[args4j \"2.0.26\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[args4j \"2.0.26\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.mozilla/rhino"],"^7","org.mozilla/rhino"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.7R4\""],"^7","\"1.7R4\""]],"^7","[org.mozilla/rhino \"1.7R4\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[org.mozilla/rhino \"1.7R4\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.json/json"],"^7","org.json/json"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"20090211\""],"^7","\"20090211\""]],"^7","[org.json/json \"20090211\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[org.json/json \"20090211\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.google.javascript/closure-compiler-externs"],"^7","com.google.javascript/closure-compiler-externs"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"v20140625\""],"^7","\"v20140625\""]],"^7","[com.google.javascript/closure-compiler-externs \"v20140625\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[com.google.javascript/closure-compiler-externs \"v20140625\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"json-html"],"^7","json-html"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.3.4\""],"^7","\"0.3.4\""]],"^7","[json-html \"0.3.4\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-set"],"#{"],"^3",["span",["^ ","^2","clj-set"],"}"],"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"hiccups"],"^7","hiccups"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.3.0\""],"^7","\"0.3.0\""]],"^7","[hiccups \"0.3.0\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/clojurescript"],"^7","org.clojure/clojurescript"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.0-2322\""],"^7","\"0.0-2322\""]],"^7","[org.clojure/clojurescript \"0.0-2322\"]"]],"^7","#{[hiccups \"0.3.0\"] [org.clojure/clojurescript \"0.0-2322\"]}"]],"^7","[[json-html \"0.3.4\"] #{[hiccups \"0.3.0\"] [org.clojure/clojurescript \"0.0-2322\"]}]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.fasterxml.jackson.core/jackson-core"],"^7","com.fasterxml.jackson.core/jackson-core"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"2.5.3\""],"^7","\"2.5.3\""]],"^7","[com.fasterxml.jackson.core/jackson-core \"2.5.3\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[com.fasterxml.jackson.core/jackson-core \"2.5.3\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/clojurescript"],"^7","org.clojure/clojurescript"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.0-2322\""],"^7","\"0.0-2322\""]],"^7","[org.clojure/clojurescript \"0.0-2322\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-set"],"#{"],"^3",["span",["^ ","^2","clj-set"],"}"],"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/tools.reader"],"^7","org.clojure/tools.reader"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.8.4\""],"^7","\"0.8.4\""]],"^7","[org.clojure/tools.reader \"0.8.4\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.mozilla/rhino"],"^7","org.mozilla/rhino"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.7R4\""],"^7","\"1.7R4\""]],"^7","[org.mozilla/rhino \"1.7R4\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/google-closure-library"],"^7","org.clojure/google-closure-library"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.0-20140718-946a7d39\""],"^7","\"0.0-20140718-946a7d39\""]],"^7","[org.clojure/google-closure-library \"0.0-20140718-946a7d39\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.google.javascript/closure-compiler"],"^7","com.google.javascript/closure-compiler"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"v20140625\""],"^7","\"v20140625\""]],"^7","[com.google.javascript/closure-compiler \"v20140625\"]"]],"^7","#{[org.clojure/tools.reader \"0.8.4\"] [org.mozilla/rhino \"1.7R4\"] [org.clojure/google-closure-library \"0.0-20140718-946a7d39\"] [com.google.javascript/closure-compiler \"v20140625\"]}"]],"^7","[[org.clojure/clojurescript \"0.0-2322\"] #{[org.clojure/tools.reader \"0.8.4\"] [org.mozilla/rhino \"1.7R4\"] [org.clojure/google-closure-library \"0.0-20140718-946a7d39\"] [com.google.javascript/closure-compiler \"v20140625\"]}]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"hiccup"],"^7","hiccup"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.0.5\""],"^7","\"1.0.5\""]],"^7","[hiccup \"1.0.5\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[hiccup \"1.0.5\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.fasterxml.jackson.dataformat/jackson-dataformat-cbor"],"^7","com.fasterxml.jackson.dataformat/jackson-dataformat-cbor"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"2.5.3\""],"^7","\"2.5.3\""]],"^7","[com.fasterxml.jackson.dataformat/jackson-dataformat-cbor \"2.5.3\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[com.fasterxml.jackson.dataformat/jackson-dataformat-cbor \"2.5.3\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.google.code.findbugs/jsr305"],"^7","com.google.code.findbugs/jsr305"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.3.9\""],"^7","\"1.3.9\""]],"^7","[com.google.code.findbugs/jsr305 \"1.3.9\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[com.google.code.findbugs/jsr305 \"1.3.9\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/google-closure-library"],"^7","org.clojure/google-closure-library"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.0-20140718-946a7d39\""],"^7","\"0.0-20140718-946a7d39\""]],"^7","[org.clojure/google-closure-library \"0.0-20140718-946a7d39\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-set"],"#{"],"^3",["span",["^ ","^2","clj-set"],"}"],"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/google-closure-library-third-party"],"^7","org.clojure/google-closure-library-third-party"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.0-20140718-946a7d39\""],"^7","\"0.0-20140718-946a7d39\""]],"^7","[org.clojure/google-closure-library-third-party \"0.0-20140718-946a7d39\"]"]],"^7","#{[org.clojure/google-closure-library-third-party \"0.0-20140718-946a7d39\"]}"]],"^7","[[org.clojure/google-closure-library \"0.0-20140718-946a7d39\"] #{[org.clojure/google-closure-library-third-party \"0.0-20140718-946a7d39\"]}]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/data.json"],"^7","org.clojure/data.json"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.2.6\""],"^7","\"0.2.6\""]],"^7","[org.clojure/data.json \"0.2.6\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[org.clojure/data.json \"0.2.6\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/clojure"],"^7","org.clojure/clojure"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.10.1\""],"^7","\"1.10.1\""]],"^7","[org.clojure/clojure \"1.10.1\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-set"],"#{"],"^3",["span",["^ ","^2","clj-set"],"}"],"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/core.specs.alpha"],"^7","org.clojure/core.specs.alpha"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.2.44\""],"^7","\"0.2.44\""]],"^7","[org.clojure/core.specs.alpha \"0.2.44\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/spec.alpha"],"^7","org.clojure/spec.alpha"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.2.176\""],"^7","\"0.2.176\""]],"^7","[org.clojure/spec.alpha \"0.2.176\"]"]],"^7","#{[org.clojure/core.specs.alpha \"0.2.44\"] [org.clojure/spec.alpha \"0.2.176\"]}"]],"^7","[[org.clojure/clojure \"1.10.1\"] #{[org.clojure/core.specs.alpha \"0.2.44\"] [org.clojure/spec.alpha \"0.2.176\"]}]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"cheshire"],"^7","cheshire"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"5.5.0\""],"^7","\"5.5.0\""]],"^7","[cheshire \"5.5.0\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-set"],"#{"],"^3",["span",["^ ","^2","clj-set"],"}"],"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"tigris"],"^7","tigris"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.1.1\""],"^7","\"0.1.1\""]],"^7","[tigris \"0.1.1\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.fasterxml.jackson.dataformat/jackson-dataformat-smile"],"^7","com.fasterxml.jackson.dataformat/jackson-dataformat-smile"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"2.5.3\""],"^7","\"2.5.3\""]],"^7","[com.fasterxml.jackson.dataformat/jackson-dataformat-smile \"2.5.3\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.fasterxml.jackson.core/jackson-core"],"^7","com.fasterxml.jackson.core/jackson-core"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"2.5.3\""],"^7","\"2.5.3\""]],"^7","[com.fasterxml.jackson.core/jackson-core \"2.5.3\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.fasterxml.jackson.dataformat/jackson-dataformat-cbor"],"^7","com.fasterxml.jackson.dataformat/jackson-dataformat-cbor"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"2.5.3\""],"^7","\"2.5.3\""]],"^7","[com.fasterxml.jackson.dataformat/jackson-dataformat-cbor \"2.5.3\"]"]],"^7","#{[tigris \"0.1.1\"] [com.fasterxml.jackson.dataformat/jackson-dataformat-smile \"2.5.3\"] [com.fasterxml.jackson.core/jackson-core \"2.5.3\"] [com.fasterxml.jackson.dataformat/jackson-dataformat-cbor \"2.5.3\"]}"]],"^7","[[cheshire \"5.5.0\"] #{[tigris \"0.1.1\"] [com.fasterxml.jackson.dataformat/jackson-dataformat-smile \"2.5.3\"] [com.fasterxml.jackson.core/jackson-core \"2.5.3\"] [com.fasterxml.jackson.dataformat/jackson-dataformat-cbor \"2.5.3\"]}]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/core.specs.alpha"],"^7","org.clojure/core.specs.alpha"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.2.44\""],"^7","\"0.2.44\""]],"^7","[org.clojure/core.specs.alpha \"0.2.44\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[org.clojure/core.specs.alpha \"0.2.44\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.pinkgorilla/gorilla-renderable"],"^7","org.pinkgorilla/gorilla-renderable"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"3.0.0\""],"^7","\"3.0.0\""]],"^7","[org.pinkgorilla/gorilla-renderable \"3.0.0\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-set"],"#{"],"^3",["span",["^ ","^2","clj-set"],"}"],"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"hiccup"],"^7","hiccup"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.0.5\""],"^7","\"1.0.5\""]],"^7","[hiccup \"1.0.5\"]"]],"^7","#{[hiccup \"1.0.5\"]}"]],"^7","[[org.pinkgorilla/gorilla-renderable \"3.0.0\"] #{[hiccup \"1.0.5\"]}]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"commons-codec"],"^7","commons-codec"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.10\""],"^7","\"1.10\""]],"^7","[commons-codec \"1.10\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[commons-codec \"1.10\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/spec.alpha"],"^7","org.clojure/spec.alpha"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.2.176\""],"^7","\"0.2.176\""]],"^7","[org.clojure/spec.alpha \"0.2.176\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[org.clojure/spec.alpha \"0.2.176\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.google.javascript/closure-compiler"],"^7","com.google.javascript/closure-compiler"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"v20140625\""],"^7","\"v20140625\""]],"^7","[com.google.javascript/closure-compiler \"v20140625\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-set"],"#{"],"^3",["span",["^ ","^2","clj-set"],"}"],"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.google.guava/guava"],"^7","com.google.guava/guava"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"17.0\""],"^7","\"17.0\""]],"^7","[com.google.guava/guava \"17.0\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"args4j"],"^7","args4j"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"2.0.26\""],"^7","\"2.0.26\""]],"^7","[args4j \"2.0.26\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.json/json"],"^7","org.json/json"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"20090211\""],"^7","\"20090211\""]],"^7","[org.json/json \"20090211\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.google.javascript/closure-compiler-externs"],"^7","com.google.javascript/closure-compiler-externs"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"v20140625\""],"^7","\"v20140625\""]],"^7","[com.google.javascript/closure-compiler-externs \"v20140625\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.google.code.findbugs/jsr305"],"^7","com.google.code.findbugs/jsr305"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.3.9\""],"^7","\"1.3.9\""]],"^7","[com.google.code.findbugs/jsr305 \"1.3.9\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.google.protobuf/protobuf-java"],"^7","com.google.protobuf/protobuf-java"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"2.5.0\""],"^7","\"2.5.0\""]],"^7","[com.google.protobuf/protobuf-java \"2.5.0\"]"]],"^7","#{[com.google.guava/guava \"17.0\"] [args4j \"2.0.26\"] [org.json/json \"20090211\"] [com.google.javascript/closure-compiler-externs \"v20140625\"] [com.google.code.findbugs/jsr305 \"1.3.9\"] [com.google.protobuf/protobuf-java \"2.5.0\"]}"]],"^7","[[com.google.javascript/closure-compiler \"v20140625\"] #{[com.google.guava/guava \"17.0\"] [args4j \"2.0.26\"] [org.json/json \"20090211\"] [com.google.javascript/closure-compiler-externs \"v20140625\"] [com.google.code.findbugs/jsr305 \"1.3.9\"] [com.google.protobuf/protobuf-java \"2.5.0\"]}]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.google.protobuf/protobuf-java"],"^7","com.google.protobuf/protobuf-java"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"2.5.0\""],"^7","\"2.5.0\""]],"^7","[com.google.protobuf/protobuf-java \"2.5.0\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[com.google.protobuf/protobuf-java \"2.5.0\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"selmer"],"^7","selmer"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.8.9\""],"^7","\"0.8.9\""]],"^7","[selmer \"0.8.9\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-set"],"#{"],"^3",["span",["^ ","^2","clj-set"],"}"],"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"joda-time"],"^7","joda-time"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"2.8.1\""],"^7","\"2.8.1\""]],"^7","[joda-time \"2.8.1\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"json-html"],"^7","json-html"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.3.4\""],"^7","\"0.3.4\""]],"^7","[json-html \"0.3.4\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"cheshire"],"^7","cheshire"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"5.5.0\""],"^7","\"5.5.0\""]],"^7","[cheshire \"5.5.0\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"commons-codec"],"^7","commons-codec"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.10\""],"^7","\"1.10\""]],"^7","[commons-codec \"1.10\"]"]],"^7","#{[joda-time \"2.8.1\"] [json-html \"0.3.4\"] [cheshire \"5.5.0\"] [commons-codec \"1.10\"]}"]],"^7","[[selmer \"0.8.9\"] #{[joda-time \"2.8.1\"] [json-html \"0.3.4\"] [cheshire \"5.5.0\"] [commons-codec \"1.10\"]}]"]],"^7","{[org.pinkgorilla/gorilla-leaflet \"0.2.6\"] #{[org.clojure/data.json \"0.2.6\"] [org.clojure/clojure \"1.10.1\"] [org.pinkgorilla/gorilla-renderable \"3.0.0\"] [selmer \"0.8.9\"]}, [org.clojure/tools.reader \"0.8.4\"] nil, [tigris \"0.1.1\"] nil, [hiccups \"0.3.0\"] nil, [com.fasterxml.jackson.dataformat/jackson-dataformat-smile \"2.5.3\"] nil, [org.clojure/google-closure-library-third-party \"0.0-20140718-946a7d39\"] nil, [com.google.guava/guava \"17.0\"] nil, [joda-time \"2.8.1\"] nil, [args4j \"2.0.26\"] nil, [org.mozilla/rhino \"1.7R4\"] nil, [org.json/json \"20090211\"] nil, [com.google.javascript/closure-compiler-externs \"v20140625\"] nil, [json-html \"0.3.4\"] #{[hiccups \"0.3.0\"] [org.clojure/clojurescript \"0.0-2322\"]}, [com.fasterxml.jackson.core/jackson-core \"2.5.3\"] nil, [org.clojure/clojurescript \"0.0-2322\"] #{[org.clojure/tools.reader \"0.8.4\"] [org.mozilla/rhino \"1.7R4\"] [org.clojure/google-closure-library \"0.0-20140718-946a7d39\"] [com.google.javascript/closure-compiler \"v20140625\"]}, [hiccup \"1.0.5\"] nil, [com.fasterxml.jackson.dataformat/jackson-dataformat-cbor \"2.5.3\"] nil, [com.google.code.findbugs/jsr305 \"1.3.9\"] nil, [org.clojure/google-closure-library \"0.0-20140718-946a7d39\"] #{[org.clojure/google-closure-library-third-party \"0.0-20140718-946a7d39\"]}, [org.clojure/data.json \"0.2.6\"] nil, [org.clojure/clojure \"1.10.1\"] #{[org.clojure/core.specs.alpha \"0.2.44\"] [org.clojure/spec.alpha \"0.2.176\"]}, [cheshire \"5.5.0\"] #{[tigris \"0.1.1\"] [com.fasterxml.jackson.dataformat/jackson-dataformat-smile \"2.5.3\"] [com.fasterxml.jackson.core/jackson-core \"2.5.3\"] [com.fasterxml.jackson.dataformat/jackson-dataformat-cbor \"2.5.3\"]}, [org.clojure/core.specs.alpha \"0.2.44\"] nil, [org.pinkgorilla/gorilla-renderable \"3.0.0\"] #{[hiccup \"1.0.5\"]}, [commons-codec \"1.10\"] nil, [org.clojure/spec.alpha \"0.2.176\"] nil, [com.google.javascript/closure-compiler \"v20140625\"] #{[com.google.guava/guava \"17.0\"] [args4j \"2.0.26\"] [org.json/json \"20090211\"] [com.google.javascript/closure-compiler-externs \"v20140625\"] [com.google.code.findbugs/jsr305 \"1.3.9\"] [com.google.protobuf/protobuf-java \"2.5.0\"]}, [com.google.protobuf/protobuf-java \"2.5.0\"] nil, [selmer \"0.8.9\"] #{[joda-time \"2.8.1\"] [json-html \"0.3.4\"] [cheshire \"5.5.0\"] [commons-codec \"1.10\"]}}"]
;; <=

;; @@ [clj]
(require '[pinkgorilla.ui.leaflet :as lg])
;; @@
;; =>
;;; ["^ ","~:type","html","~:content",["span",["^ ","~:class","clj-nil"],"nil"],"~:value","nil"]
;; <=

;; **
;;; ## API function: geo
;;; 
;;; There is one function you need to use to plot data on maps: `geo`.  It takes geometries as arguments, where a geometry is a sequence of lat/long coordinates tagged with how you want them to be displayed on the map.  As an example, here's a geometry that describes 3 points:
;;; 
;;; ```
;;; [:points [[35.059444 -118.151667]
;;;           [34.5975 -117.383056]
;;;           [33.9425, -118.408056]]]
;;; ```
;;; 
;;; Besides points, leaflet-gorilla also supports lines, polygons and GeoJSON.
;;; 
;;; ## Examples
;;; 
;;; First we'll define some points to use in our examples:
;; **

;; @@ [clj]
(def points [[35.059444 -118.151667]
             [34.5975 -117.383056]
             [33.9425, -118.408056]
             [34.200556 -118.358611]])
;; @@
;; =>
;;; ["^ ","~:type","html","~:content",["span",["^ ","~:class","clj-var"],"#'gentle-shelter/points"],"~:value","#'gentle-shelter/points"]
;; <=

;; **
;;; Plot the points on a map (note that if you don't tag a geometry, it is interpreted as a set of points):
;; **

;; @@ [clj]
(lg/geo points)
;; @@
;; =>
;;; ["^ ","~:type","html","~:content","<div>\n<div id='29218d5f-80f5-4ed5-814c-e5e2e5c88f80' style='height: 400px; width: 400px;'></div>\n<script type='text/javascript'>\n(function() {\n  /*\n  var cachedScript = function(url, options) {\n    // Allow user to set any option except for dataType, cache, and url\n    options = $.extend( options || {}, {\n      dataType: 'script',\n      cache: true,\n      url: url\n    });\n\n    // Use $.ajax() since it is more flexible than $.getScript\n    // Return the jqXHR object so we can chain callbacks\n    return jQuery.ajax(options);\n  };\n  */\n  var createMap = function() {\n    var map = L.map('29218d5f-80f5-4ed5-814c-e5e2e5c88f80')\n    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png')\n        .addTo(map);\n    var geoJsons = [{\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPoint\",\"coordinates\":[[-118.151667,35.059444],[-117.383056,34.5975],[-118.408056,33.9425],[-118.358611,34.200556]]}}];\n    var bounds = null;\n    for (var i = 0; i < geoJsons.length; i++) {\n      var geoJson = L.geoJson(\n      geoJsons[i],\n      {style: {color: 'steelblue',\n               weight: 5.0,\n               dashArray: '1, 0',\n               lineCap: 'butt',\n               lineJoin: 'miter',\n               opacity: 1.0}});\n      geoJson.addTo(map);\n      console.log('Added GeoJSON:');\n      console.log(geoJsons[i]);\n      if (!bounds) {\n        bounds = geoJson.getBounds();\n      } else {\n        bounds.extend(geoJson.getBounds());\n      }\n    }\n    if (null) {\n      map.setView.apply(map, null);\n    } else {\n      console.log('setting bounds to ' + bounds);\n      console.log(bounds);\n      map.fitBounds(bounds);\n    }\n  };\n  if (!document.getElementById('leaflet-css')) {\n      var css = document.createElement ('link');\n      css.setAttribute ('rel','stylesheet');\n      css.setAttribute ('href','gorilla-leaflet/css/leaflet-0.7.3.css');\n      css.setAttribute ('id','leaflet-css');\n      document.head.appendChild (css);\n  }\n  if (!window.leafletJsLoaded) {\n    if (!window.leafletJsIsLoading) {\n      window.leafletJsLoadedCallbacks = [createMap];\n      window.leafletJsIsLoading = true;\n      fetch('gorilla-leaflet/js/leaflet-0.7.3.js')\n                .then((response) => {\n                  window.leafletJsIsLoading = false;\n                  window.leafletJsLoaded = true;\n                  return response.text();//json();\n                 })\n                .then((text) => {\n                    eval(text);\n                    console.log('Leaflet initialized');\n                    debugger;\n                    window.leafletJsLoadedCallbacks.forEach(\n                        cb => {\n                            // debugger;\n                            cb()\n                         } );\n                    // debugger;\n                    console.log('Leaflet loader callbacks executed');\n                })\n                .catch((error) => {\n                 console.error('Error:', error);\n                });\n\n      /*\n      cachedScript('http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js')\n        .done(function() {\n          window.leafletJsIsLoading = false;\n          window.leafletJsLoaded = true;\n          _.each(window.leafletJsLoadedCallbacks, function(cb) { cb(); });\n          window.leafletJsLoadedCallbacks = [];\n        })\n        .fail(function() { console.log('failed'); });\n       */\n    } else {\n      window.leafletJsLoadedCallbacks.push(createMap);\n    }\n  } else {\n    createMap();\n  }\n\n}());\n</script>\n</div>","~:value","#pinkgorilla.ui.leaflet.LeafletView{:geodescs ({:type :points, :desc [[35.059444 -118.151667] [34.5975 -117.383056] [33.9425 -118.408056] [34.200556 -118.358611]]}), :opts {}}"]
;; <=

;; **
;;; Now plot the line containing the points:
;; **

;; @@ [clj]
(lg/geo [:line points])
;; @@
;; =>
;;; ["^ ","~:type","html","~:content","<div>\n<div id='a224f1dc-4f43-4533-bfd2-4dc8b91abfcd' style='height: 400px; width: 400px;'></div>\n<script type='text/javascript'>\n(function() {\n  /*\n  var cachedScript = function(url, options) {\n    // Allow user to set any option except for dataType, cache, and url\n    options = $.extend( options || {}, {\n      dataType: 'script',\n      cache: true,\n      url: url\n    });\n\n    // Use $.ajax() since it is more flexible than $.getScript\n    // Return the jqXHR object so we can chain callbacks\n    return jQuery.ajax(options);\n  };\n  */\n  var createMap = function() {\n    var map = L.map('a224f1dc-4f43-4533-bfd2-4dc8b91abfcd')\n    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png')\n        .addTo(map);\n    var geoJsons = [{\"type\":\"Feature\",\"geometry\":{\"type\":\"LineString\",\"coordinates\":[[-118.151667,35.059444],[-117.383056,34.5975],[-118.408056,33.9425],[-118.358611,34.200556]]}}];\n    var bounds = null;\n    for (var i = 0; i < geoJsons.length; i++) {\n      var geoJson = L.geoJson(\n      geoJsons[i],\n      {style: {color: 'steelblue',\n               weight: 5.0,\n               dashArray: '1, 0',\n               lineCap: 'butt',\n               lineJoin: 'miter',\n               opacity: 1.0}});\n      geoJson.addTo(map);\n      console.log('Added GeoJSON:');\n      console.log(geoJsons[i]);\n      if (!bounds) {\n        bounds = geoJson.getBounds();\n      } else {\n        bounds.extend(geoJson.getBounds());\n      }\n    }\n    if (null) {\n      map.setView.apply(map, null);\n    } else {\n      console.log('setting bounds to ' + bounds);\n      console.log(bounds);\n      map.fitBounds(bounds);\n    }\n  };\n  if (!document.getElementById('leaflet-css')) {\n      var css = document.createElement ('link');\n      css.setAttribute ('rel','stylesheet');\n      css.setAttribute ('href','gorilla-leaflet/css/leaflet-0.7.3.css');\n      css.setAttribute ('id','leaflet-css');\n      document.head.appendChild (css);\n  }\n  if (!window.leafletJsLoaded) {\n    if (!window.leafletJsIsLoading) {\n      window.leafletJsLoadedCallbacks = [createMap];\n      window.leafletJsIsLoading = true;\n      fetch('gorilla-leaflet/js/leaflet-0.7.3.js')\n                .then((response) => {\n                  window.leafletJsIsLoading = false;\n                  window.leafletJsLoaded = true;\n                  return response.text();//json();\n                 })\n                .then((text) => {\n                    eval(text);\n                    console.log('Leaflet initialized');\n                    debugger;\n                    window.leafletJsLoadedCallbacks.forEach(\n                        cb => {\n                            // debugger;\n                            cb()\n                         } );\n                    // debugger;\n                    console.log('Leaflet loader callbacks executed');\n                })\n                .catch((error) => {\n                 console.error('Error:', error);\n                });\n\n      /*\n      cachedScript('http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js')\n        .done(function() {\n          window.leafletJsIsLoading = false;\n          window.leafletJsLoaded = true;\n          _.each(window.leafletJsLoadedCallbacks, function(cb) { cb(); });\n          window.leafletJsLoadedCallbacks = [];\n        })\n        .fail(function() { console.log('failed'); });\n       */\n    } else {\n      window.leafletJsLoadedCallbacks.push(createMap);\n    }\n  } else {\n    createMap();\n  }\n\n}());\n</script>\n</div>","~:value","#pinkgorilla.ui.leaflet.LeafletView{:geodescs ({:type :line, :desc [[35.059444 -118.151667] [34.5975 -117.383056] [33.9425 -118.408056] [34.200556 -118.358611]]}), :opts {}}"]
;; <=

;; **
;;; Next we'll plot a polygon containing the points.  Note that polygons are defined by lists of lines; The first list is the exterior ring and and others are interior rings or holes.  So we wrap our points in another vector:
;; **

;; @@ [clj]
(lg/geo [:polygon [points]])
;; @@
;; =>
;;; ["^ ","~:type","html","~:content","<div>\n<div id='68400eac-f4a5-4833-8696-03af43390b1d' style='height: 400px; width: 400px;'></div>\n<script type='text/javascript'>\n(function() {\n  /*\n  var cachedScript = function(url, options) {\n    // Allow user to set any option except for dataType, cache, and url\n    options = $.extend( options || {}, {\n      dataType: 'script',\n      cache: true,\n      url: url\n    });\n\n    // Use $.ajax() since it is more flexible than $.getScript\n    // Return the jqXHR object so we can chain callbacks\n    return jQuery.ajax(options);\n  };\n  */\n  var createMap = function() {\n    var map = L.map('68400eac-f4a5-4833-8696-03af43390b1d')\n    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png')\n        .addTo(map);\n    var geoJsons = [{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-118.151667,35.059444],[-117.383056,34.5975],[-118.408056,33.9425],[-118.358611,34.200556]]]}}];\n    var bounds = null;\n    for (var i = 0; i < geoJsons.length; i++) {\n      var geoJson = L.geoJson(\n      geoJsons[i],\n      {style: {color: 'steelblue',\n               weight: 5.0,\n               dashArray: '1, 0',\n               lineCap: 'butt',\n               lineJoin: 'miter',\n               opacity: 1.0}});\n      geoJson.addTo(map);\n      console.log('Added GeoJSON:');\n      console.log(geoJsons[i]);\n      if (!bounds) {\n        bounds = geoJson.getBounds();\n      } else {\n        bounds.extend(geoJson.getBounds());\n      }\n    }\n    if (null) {\n      map.setView.apply(map, null);\n    } else {\n      console.log('setting bounds to ' + bounds);\n      console.log(bounds);\n      map.fitBounds(bounds);\n    }\n  };\n  if (!document.getElementById('leaflet-css')) {\n      var css = document.createElement ('link');\n      css.setAttribute ('rel','stylesheet');\n      css.setAttribute ('href','gorilla-leaflet/css/leaflet-0.7.3.css');\n      css.setAttribute ('id','leaflet-css');\n      document.head.appendChild (css);\n  }\n  if (!window.leafletJsLoaded) {\n    if (!window.leafletJsIsLoading) {\n      window.leafletJsLoadedCallbacks = [createMap];\n      window.leafletJsIsLoading = true;\n      fetch('gorilla-leaflet/js/leaflet-0.7.3.js')\n                .then((response) => {\n                  window.leafletJsIsLoading = false;\n                  window.leafletJsLoaded = true;\n                  return response.text();//json();\n                 })\n                .then((text) => {\n                    eval(text);\n                    console.log('Leaflet initialized');\n                    debugger;\n                    window.leafletJsLoadedCallbacks.forEach(\n                        cb => {\n                            // debugger;\n                            cb()\n                         } );\n                    // debugger;\n                    console.log('Leaflet loader callbacks executed');\n                })\n                .catch((error) => {\n                 console.error('Error:', error);\n                });\n\n      /*\n      cachedScript('http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js')\n        .done(function() {\n          window.leafletJsIsLoading = false;\n          window.leafletJsLoaded = true;\n          _.each(window.leafletJsLoadedCallbacks, function(cb) { cb(); });\n          window.leafletJsLoadedCallbacks = [];\n        })\n        .fail(function() { console.log('failed'); });\n       */\n    } else {\n      window.leafletJsLoadedCallbacks.push(createMap);\n    }\n  } else {\n    createMap();\n  }\n\n}());\n</script>\n</div>","~:value","#pinkgorilla.ui.leaflet.LeafletView{:geodescs ({:type :polygon, :desc [[[35.059444 -118.151667] [34.5975 -117.383056] [33.9425 -118.408056] [34.200556 -118.358611]]]}), :opts {}}"]
;; <=

;; **
;;; Here's an example of putting a hole in the polygon:
;; **

;; @@ [clj]
(def hole [[34.6 -118.15] [34.7 -117.8] [34.35 -118.15]])
(lg/geo [:polygon [points hole]])
;; @@
;; =>
;;; ["^ ","~:type","html","~:content","<div>\n<div id='618789cb-5bd4-4068-b297-9cb61b4baf28' style='height: 400px; width: 400px;'></div>\n<script type='text/javascript'>\n(function() {\n  /*\n  var cachedScript = function(url, options) {\n    // Allow user to set any option except for dataType, cache, and url\n    options = $.extend( options || {}, {\n      dataType: 'script',\n      cache: true,\n      url: url\n    });\n\n    // Use $.ajax() since it is more flexible than $.getScript\n    // Return the jqXHR object so we can chain callbacks\n    return jQuery.ajax(options);\n  };\n  */\n  var createMap = function() {\n    var map = L.map('618789cb-5bd4-4068-b297-9cb61b4baf28')\n    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png')\n        .addTo(map);\n    var geoJsons = [{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-118.151667,35.059444],[-117.383056,34.5975],[-118.408056,33.9425],[-118.358611,34.200556]],[[-118.15,34.6],[-117.8,34.7],[-118.15,34.35]]]}}];\n    var bounds = null;\n    for (var i = 0; i < geoJsons.length; i++) {\n      var geoJson = L.geoJson(\n      geoJsons[i],\n      {style: {color: 'steelblue',\n               weight: 5.0,\n               dashArray: '1, 0',\n               lineCap: 'butt',\n               lineJoin: 'miter',\n               opacity: 1.0}});\n      geoJson.addTo(map);\n      console.log('Added GeoJSON:');\n      console.log(geoJsons[i]);\n      if (!bounds) {\n        bounds = geoJson.getBounds();\n      } else {\n        bounds.extend(geoJson.getBounds());\n      }\n    }\n    if (null) {\n      map.setView.apply(map, null);\n    } else {\n      console.log('setting bounds to ' + bounds);\n      console.log(bounds);\n      map.fitBounds(bounds);\n    }\n  };\n  if (!document.getElementById('leaflet-css')) {\n      var css = document.createElement ('link');\n      css.setAttribute ('rel','stylesheet');\n      css.setAttribute ('href','gorilla-leaflet/css/leaflet-0.7.3.css');\n      css.setAttribute ('id','leaflet-css');\n      document.head.appendChild (css);\n  }\n  if (!window.leafletJsLoaded) {\n    if (!window.leafletJsIsLoading) {\n      window.leafletJsLoadedCallbacks = [createMap];\n      window.leafletJsIsLoading = true;\n      fetch('gorilla-leaflet/js/leaflet-0.7.3.js')\n                .then((response) => {\n                  window.leafletJsIsLoading = false;\n                  window.leafletJsLoaded = true;\n                  return response.text();//json();\n                 })\n                .then((text) => {\n                    eval(text);\n                    console.log('Leaflet initialized');\n                    debugger;\n                    window.leafletJsLoadedCallbacks.forEach(\n                        cb => {\n                            // debugger;\n                            cb()\n                         } );\n                    // debugger;\n                    console.log('Leaflet loader callbacks executed');\n                })\n                .catch((error) => {\n                 console.error('Error:', error);\n                });\n\n      /*\n      cachedScript('http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js')\n        .done(function() {\n          window.leafletJsIsLoading = false;\n          window.leafletJsLoaded = true;\n          _.each(window.leafletJsLoadedCallbacks, function(cb) { cb(); });\n          window.leafletJsLoadedCallbacks = [];\n        })\n        .fail(function() { console.log('failed'); });\n       */\n    } else {\n      window.leafletJsLoadedCallbacks.push(createMap);\n    }\n  } else {\n    createMap();\n  }\n\n}());\n</script>\n</div>","~:value","#pinkgorilla.ui.leaflet.LeafletView{:geodescs ({:type :polygon, :desc [[[35.059444 -118.151667] [34.5975 -117.383056] [33.9425 -118.408056] [34.200556 -118.358611]] [[34.6 -118.15] [34.7 -117.8] [34.35 -118.15]]]}), :opts {}}"]
;; <=

;; **
;;; You can combine geometries on a single map:
;; **

;; @@ [clj]
(lg/geo [:polygon [points [[34.6 -118.15] [34.7 -117.8] [34.35 -118.15]]]]
            [:points points]
            [:points hole]
            [:line [[34.62 -119] [34 -117]]])
;; @@
;; =>
;;; ["^ ","~:type","html","~:content","<div>\n<div id='1dd04e86-47c1-46e4-9949-34041e6594ee' style='height: 400px; width: 400px;'></div>\n<script type='text/javascript'>\n(function() {\n  /*\n  var cachedScript = function(url, options) {\n    // Allow user to set any option except for dataType, cache, and url\n    options = $.extend( options || {}, {\n      dataType: 'script',\n      cache: true,\n      url: url\n    });\n\n    // Use $.ajax() since it is more flexible than $.getScript\n    // Return the jqXHR object so we can chain callbacks\n    return jQuery.ajax(options);\n  };\n  */\n  var createMap = function() {\n    var map = L.map('1dd04e86-47c1-46e4-9949-34041e6594ee')\n    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png')\n        .addTo(map);\n    var geoJsons = [{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-118.151667,35.059444],[-117.383056,34.5975],[-118.408056,33.9425],[-118.358611,34.200556]],[[-118.15,34.6],[-117.8,34.7],[-118.15,34.35]]]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPoint\",\"coordinates\":[[-118.151667,35.059444],[-117.383056,34.5975],[-118.408056,33.9425],[-118.358611,34.200556]]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPoint\",\"coordinates\":[[-118.15,34.6],[-117.8,34.7],[-118.15,34.35]]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"LineString\",\"coordinates\":[[-119,34.62],[-117,34]]}}];\n    var bounds = null;\n    for (var i = 0; i < geoJsons.length; i++) {\n      var geoJson = L.geoJson(\n      geoJsons[i],\n      {style: {color: 'steelblue',\n               weight: 5.0,\n               dashArray: '1, 0',\n               lineCap: 'butt',\n               lineJoin: 'miter',\n               opacity: 1.0}});\n      geoJson.addTo(map);\n      console.log('Added GeoJSON:');\n      console.log(geoJsons[i]);\n      if (!bounds) {\n        bounds = geoJson.getBounds();\n      } else {\n        bounds.extend(geoJson.getBounds());\n      }\n    }\n    if (null) {\n      map.setView.apply(map, null);\n    } else {\n      console.log('setting bounds to ' + bounds);\n      console.log(bounds);\n      map.fitBounds(bounds);\n    }\n  };\n  if (!document.getElementById('leaflet-css')) {\n      var css = document.createElement ('link');\n      css.setAttribute ('rel','stylesheet');\n      css.setAttribute ('href','gorilla-leaflet/css/leaflet-0.7.3.css');\n      css.setAttribute ('id','leaflet-css');\n      document.head.appendChild (css);\n  }\n  if (!window.leafletJsLoaded) {\n    if (!window.leafletJsIsLoading) {\n      window.leafletJsLoadedCallbacks = [createMap];\n      window.leafletJsIsLoading = true;\n      fetch('gorilla-leaflet/js/leaflet-0.7.3.js')\n                .then((response) => {\n                  window.leafletJsIsLoading = false;\n                  window.leafletJsLoaded = true;\n                  return response.text();//json();\n                 })\n                .then((text) => {\n                    eval(text);\n                    console.log('Leaflet initialized');\n                    debugger;\n                    window.leafletJsLoadedCallbacks.forEach(\n                        cb => {\n                            // debugger;\n                            cb()\n                         } );\n                    // debugger;\n                    console.log('Leaflet loader callbacks executed');\n                })\n                .catch((error) => {\n                 console.error('Error:', error);\n                });\n\n      /*\n      cachedScript('http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js')\n        .done(function() {\n          window.leafletJsIsLoading = false;\n          window.leafletJsLoaded = true;\n          _.each(window.leafletJsLoadedCallbacks, function(cb) { cb(); });\n          window.leafletJsLoadedCallbacks = [];\n        })\n        .fail(function() { console.log('failed'); });\n       */\n    } else {\n      window.leafletJsLoadedCallbacks.push(createMap);\n    }\n  } else {\n    createMap();\n  }\n\n}());\n</script>\n</div>","~:value","#pinkgorilla.ui.leaflet.LeafletView{:geodescs ({:type :polygon, :desc [[[35.059444 -118.151667] [34.5975 -117.383056] [33.9425 -118.408056] [34.200556 -118.358611]] [[34.6 -118.15] [34.7 -117.8] [34.35 -118.15]]]} {:type :points, :desc [[35.059444 -118.151667] [34.5975 -117.383056] [33.9425 -118.408056] [34.200556 -118.358611]]} {:type :points, :desc [[34.6 -118.15] [34.7 -117.8] [34.35 -118.15]]} {:type :line, :desc [[34.62 -119] [34 -117]]}), :opts {}}"]
;; <=

;; **
;;; Besides the relatively primitive point, line and polygon geometries, you can also render GeoJSON.
;; **

;; @@ [clj]
(require '[clojure.data.json :as json])

(lg/geo
  [:geojson
   (json/write-str
     {:type :Feature
      :properties
      {:name "Coors Field",
       :amenity "Baseball Stadium",
       :popupContent "This is where the Rockies play!"},
      :geometry
      {:type "Point",
       :coordinates [-104.99404, 39.75621]}})])
;; @@
;; =>
;;; ["^ ","~:type","html","~:content","<div>\n<div id='096e2017-63fa-44c8-976a-bdc05de00d5c' style='height: 400px; width: 400px;'></div>\n<script type='text/javascript'>\n(function() {\n  /*\n  var cachedScript = function(url, options) {\n    // Allow user to set any option except for dataType, cache, and url\n    options = $.extend( options || {}, {\n      dataType: 'script',\n      cache: true,\n      url: url\n    });\n\n    // Use $.ajax() since it is more flexible than $.getScript\n    // Return the jqXHR object so we can chain callbacks\n    return jQuery.ajax(options);\n  };\n  */\n  var createMap = function() {\n    var map = L.map('096e2017-63fa-44c8-976a-bdc05de00d5c')\n    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png')\n        .addTo(map);\n    var geoJsons = [{\"type\":\"Feature\",\"properties\":{\"name\":\"Coors Field\",\"amenity\":\"Baseball Stadium\",\"popupContent\":\"This is where the Rockies play!\"},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-104.99404,39.75621]}}];\n    var bounds = null;\n    for (var i = 0; i < geoJsons.length; i++) {\n      var geoJson = L.geoJson(\n      geoJsons[i],\n      {style: {color: 'steelblue',\n               weight: 5.0,\n               dashArray: '1, 0',\n               lineCap: 'butt',\n               lineJoin: 'miter',\n               opacity: 1.0}});\n      geoJson.addTo(map);\n      console.log('Added GeoJSON:');\n      console.log(geoJsons[i]);\n      if (!bounds) {\n        bounds = geoJson.getBounds();\n      } else {\n        bounds.extend(geoJson.getBounds());\n      }\n    }\n    if (null) {\n      map.setView.apply(map, null);\n    } else {\n      console.log('setting bounds to ' + bounds);\n      console.log(bounds);\n      map.fitBounds(bounds);\n    }\n  };\n  if (!document.getElementById('leaflet-css')) {\n      var css = document.createElement ('link');\n      css.setAttribute ('rel','stylesheet');\n      css.setAttribute ('href','gorilla-leaflet/css/leaflet-0.7.3.css');\n      css.setAttribute ('id','leaflet-css');\n      document.head.appendChild (css);\n  }\n  if (!window.leafletJsLoaded) {\n    if (!window.leafletJsIsLoading) {\n      window.leafletJsLoadedCallbacks = [createMap];\n      window.leafletJsIsLoading = true;\n      fetch('gorilla-leaflet/js/leaflet-0.7.3.js')\n                .then((response) => {\n                  window.leafletJsIsLoading = false;\n                  window.leafletJsLoaded = true;\n                  return response.text();//json();\n                 })\n                .then((text) => {\n                    eval(text);\n                    console.log('Leaflet initialized');\n                    debugger;\n                    window.leafletJsLoadedCallbacks.forEach(\n                        cb => {\n                            // debugger;\n                            cb()\n                         } );\n                    // debugger;\n                    console.log('Leaflet loader callbacks executed');\n                })\n                .catch((error) => {\n                 console.error('Error:', error);\n                });\n\n      /*\n      cachedScript('http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js')\n        .done(function() {\n          window.leafletJsIsLoading = false;\n          window.leafletJsLoaded = true;\n          _.each(window.leafletJsLoadedCallbacks, function(cb) { cb(); });\n          window.leafletJsLoadedCallbacks = [];\n        })\n        .fail(function() { console.log('failed'); });\n       */\n    } else {\n      window.leafletJsLoadedCallbacks.push(createMap);\n    }\n  } else {\n    createMap();\n  }\n\n}());\n</script>\n</div>","~:value","#pinkgorilla.ui.leaflet.LeafletView{:geodescs ({:type :geojson, :desc \"{\\\"type\\\":\\\"Feature\\\",\\\"properties\\\":{\\\"name\\\":\\\"Coors Field\\\",\\\"amenity\\\":\\\"Baseball Stadium\\\",\\\"popupContent\\\":\\\"This is where the Rockies play!\\\"},\\\"geometry\\\":{\\\"type\\\":\\\"Point\\\",\\\"coordinates\\\":[-104.99404,39.75621]}}\"}), :opts {}}"]
;; <=

;; **
;;; ## Options
;;; 
;;; You can also pass some options to `leaflet`.  The available options are `:width`, `:height`, `:view`, `:color`, `:opacity`, and `:tile-layer-url`.
;;; 
;;; `:width` and `:height` change the size of the map:
;; **

;; @@ [clj]
(lg/geo points :width 600 :height 450)
;; @@
;; =>
;;; ["^ ","~:type","html","~:content","<div>\n<div id='451a6d79-83bd-4538-830e-50d003339753' style='height: 450px; width: 600px;'></div>\n<script type='text/javascript'>\n(function() {\n  /*\n  var cachedScript = function(url, options) {\n    // Allow user to set any option except for dataType, cache, and url\n    options = $.extend( options || {}, {\n      dataType: 'script',\n      cache: true,\n      url: url\n    });\n\n    // Use $.ajax() since it is more flexible than $.getScript\n    // Return the jqXHR object so we can chain callbacks\n    return jQuery.ajax(options);\n  };\n  */\n  var createMap = function() {\n    var map = L.map('451a6d79-83bd-4538-830e-50d003339753')\n    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png')\n        .addTo(map);\n    var geoJsons = [{\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPoint\",\"coordinates\":[[-118.151667,35.059444],[-117.383056,34.5975],[-118.408056,33.9425],[-118.358611,34.200556]]}}];\n    var bounds = null;\n    for (var i = 0; i < geoJsons.length; i++) {\n      var geoJson = L.geoJson(\n      geoJsons[i],\n      {style: {color: 'steelblue',\n               weight: 5.0,\n               dashArray: '1, 0',\n               lineCap: 'butt',\n               lineJoin: 'miter',\n               opacity: 1.0}});\n      geoJson.addTo(map);\n      console.log('Added GeoJSON:');\n      console.log(geoJsons[i]);\n      if (!bounds) {\n        bounds = geoJson.getBounds();\n      } else {\n        bounds.extend(geoJson.getBounds());\n      }\n    }\n    if (null) {\n      map.setView.apply(map, null);\n    } else {\n      console.log('setting bounds to ' + bounds);\n      console.log(bounds);\n      map.fitBounds(bounds);\n    }\n  };\n  if (!document.getElementById('leaflet-css')) {\n      var css = document.createElement ('link');\n      css.setAttribute ('rel','stylesheet');\n      css.setAttribute ('href','gorilla-leaflet/css/leaflet-0.7.3.css');\n      css.setAttribute ('id','leaflet-css');\n      document.head.appendChild (css);\n  }\n  if (!window.leafletJsLoaded) {\n    if (!window.leafletJsIsLoading) {\n      window.leafletJsLoadedCallbacks = [createMap];\n      window.leafletJsIsLoading = true;\n      fetch('gorilla-leaflet/js/leaflet-0.7.3.js')\n                .then((response) => {\n                  window.leafletJsIsLoading = false;\n                  window.leafletJsLoaded = true;\n                  return response.text();//json();\n                 })\n                .then((text) => {\n                    eval(text);\n                    console.log('Leaflet initialized');\n                    debugger;\n                    window.leafletJsLoadedCallbacks.forEach(\n                        cb => {\n                            // debugger;\n                            cb()\n                         } );\n                    // debugger;\n                    console.log('Leaflet loader callbacks executed');\n                })\n                .catch((error) => {\n                 console.error('Error:', error);\n                });\n\n      /*\n      cachedScript('http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js')\n        .done(function() {\n          window.leafletJsIsLoading = false;\n          window.leafletJsLoaded = true;\n          _.each(window.leafletJsLoadedCallbacks, function(cb) { cb(); });\n          window.leafletJsLoadedCallbacks = [];\n        })\n        .fail(function() { console.log('failed'); });\n       */\n    } else {\n      window.leafletJsLoadedCallbacks.push(createMap);\n    }\n  } else {\n    createMap();\n  }\n\n}());\n</script>\n</div>","~:value","#pinkgorilla.ui.leaflet.LeafletView{:geodescs ({:type :points, :desc [[35.059444 -118.151667] [34.5975 -117.383056] [33.9425 -118.408056] [34.200556 -118.358611]]}), :opts {:width 600, :height 450}}"]
;; <=

;; **
;;; `:view` is used to center the map on specific coordinates, and set its zoom level.  If you don't specify `:view`, leaflet will fit the map to the geometries.
;; **

;; @@ [clj]
(lg/geo points :view [[34.5975 -117.383056] 7])
;; @@
;; =>
;;; ["^ ","~:type","html","~:content","<div>\n<div id='3cf56eb2-ff70-46cd-acac-0e0f36f03135' style='height: 400px; width: 400px;'></div>\n<script type='text/javascript'>\n(function() {\n  /*\n  var cachedScript = function(url, options) {\n    // Allow user to set any option except for dataType, cache, and url\n    options = $.extend( options || {}, {\n      dataType: 'script',\n      cache: true,\n      url: url\n    });\n\n    // Use $.ajax() since it is more flexible than $.getScript\n    // Return the jqXHR object so we can chain callbacks\n    return jQuery.ajax(options);\n  };\n  */\n  var createMap = function() {\n    var map = L.map('3cf56eb2-ff70-46cd-acac-0e0f36f03135')\n    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png')\n        .addTo(map);\n    var geoJsons = [{\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPoint\",\"coordinates\":[[-118.151667,35.059444],[-117.383056,34.5975],[-118.408056,33.9425],[-118.358611,34.200556]]}}];\n    var bounds = null;\n    for (var i = 0; i < geoJsons.length; i++) {\n      var geoJson = L.geoJson(\n      geoJsons[i],\n      {style: {color: 'steelblue',\n               weight: 5.0,\n               dashArray: '1, 0',\n               lineCap: 'butt',\n               lineJoin: 'miter',\n               opacity: 1.0}});\n      geoJson.addTo(map);\n      console.log('Added GeoJSON:');\n      console.log(geoJsons[i]);\n      if (!bounds) {\n        bounds = geoJson.getBounds();\n      } else {\n        bounds.extend(geoJson.getBounds());\n      }\n    }\n    if ([[34.5975,-117.383056],7]) {\n      map.setView.apply(map, [[34.5975,-117.383056],7]);\n    } else {\n      console.log('setting bounds to ' + bounds);\n      console.log(bounds);\n      map.fitBounds(bounds);\n    }\n  };\n  if (!document.getElementById('leaflet-css')) {\n      var css = document.createElement ('link');\n      css.setAttribute ('rel','stylesheet');\n      css.setAttribute ('href','gorilla-leaflet/css/leaflet-0.7.3.css');\n      css.setAttribute ('id','leaflet-css');\n      document.head.appendChild (css);\n  }\n  if (!window.leafletJsLoaded) {\n    if (!window.leafletJsIsLoading) {\n      window.leafletJsLoadedCallbacks = [createMap];\n      window.leafletJsIsLoading = true;\n      fetch('gorilla-leaflet/js/leaflet-0.7.3.js')\n                .then((response) => {\n                  window.leafletJsIsLoading = false;\n                  window.leafletJsLoaded = true;\n                  return response.text();//json();\n                 })\n                .then((text) => {\n                    eval(text);\n                    console.log('Leaflet initialized');\n                    debugger;\n                    window.leafletJsLoadedCallbacks.forEach(\n                        cb => {\n                            // debugger;\n                            cb()\n                         } );\n                    // debugger;\n                    console.log('Leaflet loader callbacks executed');\n                })\n                .catch((error) => {\n                 console.error('Error:', error);\n                });\n\n      /*\n      cachedScript('http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js')\n        .done(function() {\n          window.leafletJsIsLoading = false;\n          window.leafletJsLoaded = true;\n          _.each(window.leafletJsLoadedCallbacks, function(cb) { cb(); });\n          window.leafletJsLoadedCallbacks = [];\n        })\n        .fail(function() { console.log('failed'); });\n       */\n    } else {\n      window.leafletJsLoadedCallbacks.push(createMap);\n    }\n  } else {\n    createMap();\n  }\n\n}());\n</script>\n</div>","~:value","#pinkgorilla.ui.leaflet.LeafletView{:geodescs ({:type :points, :desc [[35.059444 -118.151667] [34.5975 -117.383056] [33.9425 -118.408056] [34.200556 -118.358611]]}), :opts {:view [[34.5975 -117.383056] 7]}}"]
;; <=

;; **
;;; 
;; **

;; @@ [clj]
(lg/geo :view [[34.5975 -117.383056] 7])
;; @@
;; =>
;;; ["^ ","~:type","html","~:content","<div>\n<div id='01dd5698-8377-41da-83bb-5254c8958599' style='height: 400px; width: 400px;'></div>\n<script type='text/javascript'>\n(function() {\n  /*\n  var cachedScript = function(url, options) {\n    // Allow user to set any option except for dataType, cache, and url\n    options = $.extend( options || {}, {\n      dataType: 'script',\n      cache: true,\n      url: url\n    });\n\n    // Use $.ajax() since it is more flexible than $.getScript\n    // Return the jqXHR object so we can chain callbacks\n    return jQuery.ajax(options);\n  };\n  */\n  var createMap = function() {\n    var map = L.map('01dd5698-8377-41da-83bb-5254c8958599')\n    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png')\n        .addTo(map);\n    var geoJsons = [];\n    var bounds = null;\n    for (var i = 0; i < geoJsons.length; i++) {\n      var geoJson = L.geoJson(\n      geoJsons[i],\n      {style: {color: 'steelblue',\n               weight: 5.0,\n               dashArray: '1, 0',\n               lineCap: 'butt',\n               lineJoin: 'miter',\n               opacity: 1.0}});\n      geoJson.addTo(map);\n      console.log('Added GeoJSON:');\n      console.log(geoJsons[i]);\n      if (!bounds) {\n        bounds = geoJson.getBounds();\n      } else {\n        bounds.extend(geoJson.getBounds());\n      }\n    }\n    if ([[34.5975,-117.383056],7]) {\n      map.setView.apply(map, [[34.5975,-117.383056],7]);\n    } else {\n      console.log('setting bounds to ' + bounds);\n      console.log(bounds);\n      map.fitBounds(bounds);\n    }\n  };\n  if (!document.getElementById('leaflet-css')) {\n      var css = document.createElement ('link');\n      css.setAttribute ('rel','stylesheet');\n      css.setAttribute ('href','gorilla-leaflet/css/leaflet-0.7.3.css');\n      css.setAttribute ('id','leaflet-css');\n      document.head.appendChild (css);\n  }\n  if (!window.leafletJsLoaded) {\n    if (!window.leafletJsIsLoading) {\n      window.leafletJsLoadedCallbacks = [createMap];\n      window.leafletJsIsLoading = true;\n      fetch('gorilla-leaflet/js/leaflet-0.7.3.js')\n                .then((response) => {\n                  window.leafletJsIsLoading = false;\n                  window.leafletJsLoaded = true;\n                  return response.text();//json();\n                 })\n                .then((text) => {\n                    eval(text);\n                    console.log('Leaflet initialized');\n                    debugger;\n                    window.leafletJsLoadedCallbacks.forEach(\n                        cb => {\n                            // debugger;\n                            cb()\n                         } );\n                    // debugger;\n                    console.log('Leaflet loader callbacks executed');\n                })\n                .catch((error) => {\n                 console.error('Error:', error);\n                });\n\n      /*\n      cachedScript('http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js')\n        .done(function() {\n          window.leafletJsIsLoading = false;\n          window.leafletJsLoaded = true;\n          _.each(window.leafletJsLoadedCallbacks, function(cb) { cb(); });\n          window.leafletJsLoadedCallbacks = [];\n        })\n        .fail(function() { console.log('failed'); });\n       */\n    } else {\n      window.leafletJsLoadedCallbacks.push(createMap);\n    }\n  } else {\n    createMap();\n  }\n\n}());\n</script>\n</div>","~:value","#pinkgorilla.ui.leaflet.LeafletView{:geodescs (), :opts {:view [[34.5975 -117.383056] 7]}}"]
;; <=

;; **
;;; `:color` and `:opacity` change the geometry style.  The Leaflet javascript library doesn't allow you to change point marker styles this way, so they only apply to lines and polygons.
;; **

;; @@ [clj]
(lg/geo [:line points] :color "red" :opacity 0.2)
;; @@
;; =>
;;; ["^ ","~:type","html","~:content","<div>\n<div id='6549faf1-cd13-4855-a954-342e0688e863' style='height: 400px; width: 400px;'></div>\n<script type='text/javascript'>\n(function() {\n  /*\n  var cachedScript = function(url, options) {\n    // Allow user to set any option except for dataType, cache, and url\n    options = $.extend( options || {}, {\n      dataType: 'script',\n      cache: true,\n      url: url\n    });\n\n    // Use $.ajax() since it is more flexible than $.getScript\n    // Return the jqXHR object so we can chain callbacks\n    return jQuery.ajax(options);\n  };\n  */\n  var createMap = function() {\n    var map = L.map('6549faf1-cd13-4855-a954-342e0688e863')\n    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png')\n        .addTo(map);\n    var geoJsons = [{\"type\":\"Feature\",\"geometry\":{\"type\":\"LineString\",\"coordinates\":[[-118.151667,35.059444],[-117.383056,34.5975],[-118.408056,33.9425],[-118.358611,34.200556]]}}];\n    var bounds = null;\n    for (var i = 0; i < geoJsons.length; i++) {\n      var geoJson = L.geoJson(\n      geoJsons[i],\n      {style: {color: 'red',\n               weight: 5.0,\n               dashArray: '1, 0',\n               lineCap: 'butt',\n               lineJoin: 'miter',\n               opacity: 0.2}});\n      geoJson.addTo(map);\n      console.log('Added GeoJSON:');\n      console.log(geoJsons[i]);\n      if (!bounds) {\n        bounds = geoJson.getBounds();\n      } else {\n        bounds.extend(geoJson.getBounds());\n      }\n    }\n    if (null) {\n      map.setView.apply(map, null);\n    } else {\n      console.log('setting bounds to ' + bounds);\n      console.log(bounds);\n      map.fitBounds(bounds);\n    }\n  };\n  if (!document.getElementById('leaflet-css')) {\n      var css = document.createElement ('link');\n      css.setAttribute ('rel','stylesheet');\n      css.setAttribute ('href','gorilla-leaflet/css/leaflet-0.7.3.css');\n      css.setAttribute ('id','leaflet-css');\n      document.head.appendChild (css);\n  }\n  if (!window.leafletJsLoaded) {\n    if (!window.leafletJsIsLoading) {\n      window.leafletJsLoadedCallbacks = [createMap];\n      window.leafletJsIsLoading = true;\n      fetch('gorilla-leaflet/js/leaflet-0.7.3.js')\n                .then((response) => {\n                  window.leafletJsIsLoading = false;\n                  window.leafletJsLoaded = true;\n                  return response.text();//json();\n                 })\n                .then((text) => {\n                    eval(text);\n                    console.log('Leaflet initialized');\n                    debugger;\n                    window.leafletJsLoadedCallbacks.forEach(\n                        cb => {\n                            // debugger;\n                            cb()\n                         } );\n                    // debugger;\n                    console.log('Leaflet loader callbacks executed');\n                })\n                .catch((error) => {\n                 console.error('Error:', error);\n                });\n\n      /*\n      cachedScript('http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js')\n        .done(function() {\n          window.leafletJsIsLoading = false;\n          window.leafletJsLoaded = true;\n          _.each(window.leafletJsLoadedCallbacks, function(cb) { cb(); });\n          window.leafletJsLoadedCallbacks = [];\n        })\n        .fail(function() { console.log('failed'); });\n       */\n    } else {\n      window.leafletJsLoadedCallbacks.push(createMap);\n    }\n  } else {\n    createMap();\n  }\n\n}());\n</script>\n</div>","~:value","#pinkgorilla.ui.leaflet.LeafletView{:geodescs ({:type :line, :desc [[35.059444 -118.151667] [34.5975 -117.383056] [33.9425 -118.408056] [34.200556 -118.358611]]}), :opts {:color \"red\", :opacity 0.2}}"]
;; <=

;; @@ [clj]
(lg/geo [:line points] :color "red" :weight 20 :line-join "round")
;; @@
;; =>
;;; ["^ ","~:type","html","~:content","<div>\n<div id='804132ab-7a5b-43c3-b366-2f0068acbd82' style='height: 400px; width: 400px;'></div>\n<script type='text/javascript'>\n(function() {\n  /*\n  var cachedScript = function(url, options) {\n    // Allow user to set any option except for dataType, cache, and url\n    options = $.extend( options || {}, {\n      dataType: 'script',\n      cache: true,\n      url: url\n    });\n\n    // Use $.ajax() since it is more flexible than $.getScript\n    // Return the jqXHR object so we can chain callbacks\n    return jQuery.ajax(options);\n  };\n  */\n  var createMap = function() {\n    var map = L.map('804132ab-7a5b-43c3-b366-2f0068acbd82')\n    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png')\n        .addTo(map);\n    var geoJsons = [{\"type\":\"Feature\",\"geometry\":{\"type\":\"LineString\",\"coordinates\":[[-118.151667,35.059444],[-117.383056,34.5975],[-118.408056,33.9425],[-118.358611,34.200556]]}}];\n    var bounds = null;\n    for (var i = 0; i < geoJsons.length; i++) {\n      var geoJson = L.geoJson(\n      geoJsons[i],\n      {style: {color: 'red',\n               weight: 20,\n               dashArray: '1, 0',\n               lineCap: 'butt',\n               lineJoin: 'round',\n               opacity: 1.0}});\n      geoJson.addTo(map);\n      console.log('Added GeoJSON:');\n      console.log(geoJsons[i]);\n      if (!bounds) {\n        bounds = geoJson.getBounds();\n      } else {\n        bounds.extend(geoJson.getBounds());\n      }\n    }\n    if (null) {\n      map.setView.apply(map, null);\n    } else {\n      console.log('setting bounds to ' + bounds);\n      console.log(bounds);\n      map.fitBounds(bounds);\n    }\n  };\n  if (!document.getElementById('leaflet-css')) {\n      var css = document.createElement ('link');\n      css.setAttribute ('rel','stylesheet');\n      css.setAttribute ('href','gorilla-leaflet/css/leaflet-0.7.3.css');\n      css.setAttribute ('id','leaflet-css');\n      document.head.appendChild (css);\n  }\n  if (!window.leafletJsLoaded) {\n    if (!window.leafletJsIsLoading) {\n      window.leafletJsLoadedCallbacks = [createMap];\n      window.leafletJsIsLoading = true;\n      fetch('gorilla-leaflet/js/leaflet-0.7.3.js')\n                .then((response) => {\n                  window.leafletJsIsLoading = false;\n                  window.leafletJsLoaded = true;\n                  return response.text();//json();\n                 })\n                .then((text) => {\n                    eval(text);\n                    console.log('Leaflet initialized');\n                    debugger;\n                    window.leafletJsLoadedCallbacks.forEach(\n                        cb => {\n                            // debugger;\n                            cb()\n                         } );\n                    // debugger;\n                    console.log('Leaflet loader callbacks executed');\n                })\n                .catch((error) => {\n                 console.error('Error:', error);\n                });\n\n      /*\n      cachedScript('http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js')\n        .done(function() {\n          window.leafletJsIsLoading = false;\n          window.leafletJsLoaded = true;\n          _.each(window.leafletJsLoadedCallbacks, function(cb) { cb(); });\n          window.leafletJsLoadedCallbacks = [];\n        })\n        .fail(function() { console.log('failed'); });\n       */\n    } else {\n      window.leafletJsLoadedCallbacks.push(createMap);\n    }\n  } else {\n    createMap();\n  }\n\n}());\n</script>\n</div>","~:value","#pinkgorilla.ui.leaflet.LeafletView{:geodescs ({:type :line, :desc [[35.059444 -118.151667] [34.5975 -117.383056] [33.9425 -118.408056] [34.200556 -118.358611]]}), :opts {:color \"red\", :weight 20, :line-join \"round\"}}"]
;; <=

;; @@ [clj]
(lg/geo [:line points] :color "red" :weight 3 :dash-array "10, 3")
;; @@
;; =>
;;; ["^ ","~:type","html","~:content","<div>\n<div id='8aebeb62-d62b-4d2b-b3ec-aa4be0dd9b46' style='height: 400px; width: 400px;'></div>\n<script type='text/javascript'>\n(function() {\n  /*\n  var cachedScript = function(url, options) {\n    // Allow user to set any option except for dataType, cache, and url\n    options = $.extend( options || {}, {\n      dataType: 'script',\n      cache: true,\n      url: url\n    });\n\n    // Use $.ajax() since it is more flexible than $.getScript\n    // Return the jqXHR object so we can chain callbacks\n    return jQuery.ajax(options);\n  };\n  */\n  var createMap = function() {\n    var map = L.map('8aebeb62-d62b-4d2b-b3ec-aa4be0dd9b46')\n    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png')\n        .addTo(map);\n    var geoJsons = [{\"type\":\"Feature\",\"geometry\":{\"type\":\"LineString\",\"coordinates\":[[-118.151667,35.059444],[-117.383056,34.5975],[-118.408056,33.9425],[-118.358611,34.200556]]}}];\n    var bounds = null;\n    for (var i = 0; i < geoJsons.length; i++) {\n      var geoJson = L.geoJson(\n      geoJsons[i],\n      {style: {color: 'red',\n               weight: 3,\n               dashArray: '10, 3',\n               lineCap: 'butt',\n               lineJoin: 'miter',\n               opacity: 1.0}});\n      geoJson.addTo(map);\n      console.log('Added GeoJSON:');\n      console.log(geoJsons[i]);\n      if (!bounds) {\n        bounds = geoJson.getBounds();\n      } else {\n        bounds.extend(geoJson.getBounds());\n      }\n    }\n    if (null) {\n      map.setView.apply(map, null);\n    } else {\n      console.log('setting bounds to ' + bounds);\n      console.log(bounds);\n      map.fitBounds(bounds);\n    }\n  };\n  if (!document.getElementById('leaflet-css')) {\n      var css = document.createElement ('link');\n      css.setAttribute ('rel','stylesheet');\n      css.setAttribute ('href','gorilla-leaflet/css/leaflet-0.7.3.css');\n      css.setAttribute ('id','leaflet-css');\n      document.head.appendChild (css);\n  }\n  if (!window.leafletJsLoaded) {\n    if (!window.leafletJsIsLoading) {\n      window.leafletJsLoadedCallbacks = [createMap];\n      window.leafletJsIsLoading = true;\n      fetch('gorilla-leaflet/js/leaflet-0.7.3.js')\n                .then((response) => {\n                  window.leafletJsIsLoading = false;\n                  window.leafletJsLoaded = true;\n                  return response.text();//json();\n                 })\n                .then((text) => {\n                    eval(text);\n                    console.log('Leaflet initialized');\n                    debugger;\n                    window.leafletJsLoadedCallbacks.forEach(\n                        cb => {\n                            // debugger;\n                            cb()\n                         } );\n                    // debugger;\n                    console.log('Leaflet loader callbacks executed');\n                })\n                .catch((error) => {\n                 console.error('Error:', error);\n                });\n\n      /*\n      cachedScript('http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js')\n        .done(function() {\n          window.leafletJsIsLoading = false;\n          window.leafletJsLoaded = true;\n          _.each(window.leafletJsLoadedCallbacks, function(cb) { cb(); });\n          window.leafletJsLoadedCallbacks = [];\n        })\n        .fail(function() { console.log('failed'); });\n       */\n    } else {\n      window.leafletJsLoadedCallbacks.push(createMap);\n    }\n  } else {\n    createMap();\n  }\n\n}());\n</script>\n</div>","~:value","#pinkgorilla.ui.leaflet.LeafletView{:geodescs ({:type :line, :desc [[35.059444 -118.151667] [34.5975 -117.383056] [33.9425 -118.408056] [34.200556 -118.358611]]}), :opts {:color \"red\", :weight 3, :dash-array \"10, 3\"}}"]
;; <=

;; **
;;; `:tile-layer-url` lets you change the underlying map tiles.  By default, leaflet-gorilla uses OpenStreetMap tiles, specified by `"http://{s}.tile.osm.org/{z}/{x}/{y}.png"`.  Here's an example using the Mapquest open aerial imagery tiles:
;; **

;; @@ [clj]
(lg/geo points :tile-layer-url "http://otile1.mqcdn.com/tiles/1.0.0/sat/{z}/{x}/{y}.png")
;; @@
;; =>
;;; ["^ ","~:type","html","~:content","<div>\n<div id='78cfcf63-2cb4-497e-bd36-70ef2288aafc' style='height: 400px; width: 400px;'></div>\n<script type='text/javascript'>\n(function() {\n  /*\n  var cachedScript = function(url, options) {\n    // Allow user to set any option except for dataType, cache, and url\n    options = $.extend( options || {}, {\n      dataType: 'script',\n      cache: true,\n      url: url\n    });\n\n    // Use $.ajax() since it is more flexible than $.getScript\n    // Return the jqXHR object so we can chain callbacks\n    return jQuery.ajax(options);\n  };\n  */\n  var createMap = function() {\n    var map = L.map('78cfcf63-2cb4-497e-bd36-70ef2288aafc')\n    L.tileLayer('http://otile1.mqcdn.com/tiles/1.0.0/sat/{z}/{x}/{y}.png')\n        .addTo(map);\n    var geoJsons = [{\"type\":\"Feature\",\"geometry\":{\"type\":\"MultiPoint\",\"coordinates\":[[-118.151667,35.059444],[-117.383056,34.5975],[-118.408056,33.9425],[-118.358611,34.200556]]}}];\n    var bounds = null;\n    for (var i = 0; i < geoJsons.length; i++) {\n      var geoJson = L.geoJson(\n      geoJsons[i],\n      {style: {color: 'steelblue',\n               weight: 5.0,\n               dashArray: '1, 0',\n               lineCap: 'butt',\n               lineJoin: 'miter',\n               opacity: 1.0}});\n      geoJson.addTo(map);\n      console.log('Added GeoJSON:');\n      console.log(geoJsons[i]);\n      if (!bounds) {\n        bounds = geoJson.getBounds();\n      } else {\n        bounds.extend(geoJson.getBounds());\n      }\n    }\n    if (null) {\n      map.setView.apply(map, null);\n    } else {\n      console.log('setting bounds to ' + bounds);\n      console.log(bounds);\n      map.fitBounds(bounds);\n    }\n  };\n  if (!document.getElementById('leaflet-css')) {\n      var css = document.createElement ('link');\n      css.setAttribute ('rel','stylesheet');\n      css.setAttribute ('href','gorilla-leaflet/css/leaflet-0.7.3.css');\n      css.setAttribute ('id','leaflet-css');\n      document.head.appendChild (css);\n  }\n  if (!window.leafletJsLoaded) {\n    if (!window.leafletJsIsLoading) {\n      window.leafletJsLoadedCallbacks = [createMap];\n      window.leafletJsIsLoading = true;\n      fetch('gorilla-leaflet/js/leaflet-0.7.3.js')\n                .then((response) => {\n                  window.leafletJsIsLoading = false;\n                  window.leafletJsLoaded = true;\n                  return response.text();//json();\n                 })\n                .then((text) => {\n                    eval(text);\n                    console.log('Leaflet initialized');\n                    debugger;\n                    window.leafletJsLoadedCallbacks.forEach(\n                        cb => {\n                            // debugger;\n                            cb()\n                         } );\n                    // debugger;\n                    console.log('Leaflet loader callbacks executed');\n                })\n                .catch((error) => {\n                 console.error('Error:', error);\n                });\n\n      /*\n      cachedScript('http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js')\n        .done(function() {\n          window.leafletJsIsLoading = false;\n          window.leafletJsLoaded = true;\n          _.each(window.leafletJsLoadedCallbacks, function(cb) { cb(); });\n          window.leafletJsLoadedCallbacks = [];\n        })\n        .fail(function() { console.log('failed'); });\n       */\n    } else {\n      window.leafletJsLoadedCallbacks.push(createMap);\n    }\n  } else {\n    createMap();\n  }\n\n}());\n</script>\n</div>","~:value","#pinkgorilla.ui.leaflet.LeafletView{:geodescs ({:type :points, :desc [[35.059444 -118.151667] [34.5975 -117.383056] [33.9425 -118.408056] [34.200556 -118.358611]]}), :opts {:tile-layer-url \"http://otile1.mqcdn.com/tiles/1.0.0/sat/{z}/{x}/{y}.png\"}}"]
;; <=

;; **
;;; [Mapbox](http://mapbox.com/) is a service that offers the ability to create custom map styles and generate your own tile layers.
;; **

;; **
;;; ## Fun examples
;; **

;; **
;;; Let's map the locations of every earthquake the USGS has detected in the last hour:
;; **

;; @@ [clj]
;;(require '[clojure.string :as string])

#_(defn fetch-url [url]
  (with-open [stream (.openStream (java.net.URL. url))]
    (let [buf (java.io.BufferedReader.
               (java.io.InputStreamReader. stream))]
      (slurp buf))))

#_(defn fetch-url-lines [url]
  (string/split-lines (fetch-url url)))

#_(def earthquakes
  (->> "http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_hour.csv"
       fetch-url-lines
       rest
       (map #(string/split % #","))))

#_(lg/geo (map (fn [e] [(e 1) (e 2)]) earthquakes))
;; @@

;; **
;;; Let's map the path of an LAPD helicopter:
;; **

;; @@ [clj]
(def N662PD
  (->> "https://gist.githubusercontent.com/wiseman/e37194e224b35e8cc61b/raw/fb140a5f3f860aeeca86bf6b5025182f1cb2653e/N662PD.log"
       fetch-url-lines
       rest
       (map #(string/split % #","))))

(lg/geo [:line (map (fn [e] [(e 9) (e 10)]) N662PD)] :opacity 0.8)
;; @@
;; =>
;;; ["^ ","~:type","html","~:content","<div>\n<div id='7089b1ad-2ee2-44d4-96d0-2beda1ec3b41' style='height: 400px; width: 400px;'></div>\n<script type='text/javascript'>\n$(function () {\n  var cachedScript = function(url, options) {\n    // Allow user to set any option except for dataType, cache, and url\n    options = $.extend( options || {}, {\n      dataType: 'script',\n      cache: true,\n      url: url\n    });\n\n    // Use $.ajax() since it is more flexible than $.getScript\n    // Return the jqXHR object so we can chain callbacks\n    return jQuery.ajax(options);\n  };\n  var createMap = function() {\n    var map = L.map('7089b1ad-2ee2-44d4-96d0-2beda1ec3b41')\n    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png')\n        .addTo(map);\n    var geoJsons = [{\"type\":\"Feature\",\"geometry\":{\"type\":\"LineString\",\"coordinates\":[[\"-118.19212\",\"34.10650\"],[\"-118.19212\",\"34.10650\"],[\"-118.19125\",\"34.10706\"],[\"-118.19120\",\"34.10706\"],[\"-118.19120\",\"34.10706\"],[\"-118.18726\",\"34.11111\"],[\"-118.18697\",\"34.11125\"],[\"-118.18697\",\"34.11125\"],[\"-118.18666\",\"34.11259\"],[\"-118.18668\",\"34.11260\"],[\"-118.18668\",\"34.11260\"],[\"-118.18668\",\"34.11260\"],[\"-118.18668\",\"34.11260\"],[\"-118.18668\",\"34.11260\"],[\"-118.18668\",\"34.11260\"],[\"-118.18668\",\"34.11260\"],[\"-118.18668\",\"34.11259\"],[\"-118.18668\",\"34.11259\"],[\"-118.18668\",\"34.11259\"],[\"-118.18668\",\"34.11259\"],[\"-118.18668\",\"34.11259\"],[\"-118.18668\",\"34.11259\"],[\"-118.18668\",\"34.11259\"],[\"-118.18668\",\"34.11259\"],[\"-118.18668\",\"34.11259\"],[\"-118.18823\",\"34.12102\"],[\"-118.18823\",\"34.12102\"],[\"-118.18823\",\"34.12102\"],[\"-118.18823\",\"34.12102\"],[\"-118.18823\",\"34.12102\"],[\"-118.18823\",\"34.12102\"],[\"-118.18823\",\"34.12102\"],[\"-118.18823\",\"34.12102\"],[\"-118.19109\",\"34.12207\"],[\"-118.19109\",\"34.12209\"],[\"-118.19109\",\"34.12209\"],[\"-118.19109\",\"34.12209\"],[\"-118.19109\",\"34.12209\"],[\"-118.19109\",\"34.12209\"],[\"-118.19109\",\"34.12209\"],[\"-118.19159\",\"34.12207\"],[\"-118.19160\",\"34.12205\"],[\"-118.19160\",\"34.12205\"],[\"-118.19160\",\"34.12205\"],[\"-118.19160\",\"34.12205\"],[\"-118.19160\",\"34.12205\"],[\"-118.19160\",\"34.12205\"],[\"-118.19160\",\"34.12205\"],[\"-118.19238\",\"34.12180\"],[\"-118.19238\",\"34.12180\"],[\"-118.19238\",\"34.12180\"],[\"-118.19238\",\"34.12180\"],[\"-118.19238\",\"34.12180\"],[\"-118.19238\",\"34.12180\"],[\"-118.19238\",\"34.12180\"],[\"-118.19238\",\"34.12180\"],[\"-118.19238\",\"34.12180\"],[\"-118.19238\",\"34.12180\"],[\"-118.19238\",\"34.12180\"],[\"-118.19647\",\"34.11967\"],[\"-118.19647\",\"34.11967\"],[\"-118.19647\",\"34.11967\"],[\"-118.19647\",\"34.11967\"],[\"-118.19647\",\"34.11967\"],[\"-118.19664\",\"34.11919\"],[\"-118.19664\",\"34.11921\"],[\"-118.19664\",\"34.11921\"],[\"-118.19664\",\"34.11921\"],[\"-118.19664\",\"34.11921\"],[\"-118.19664\",\"34.11921\"],[\"-118.19664\",\"34.11921\"],[\"-118.19692\",\"34.11868\"],[\"-118.19693\",\"34.11869\"],[\"-118.19693\",\"34.11869\"],[\"-118.19693\",\"34.11869\"],[\"-118.19693\",\"34.11869\"],[\"-118.19693\",\"34.11869\"],[\"-118.19693\",\"34.11869\"],[\"-118.19693\",\"34.11869\"],[\"-118.19748\",\"34.11745\"],[\"-118.19750\",\"34.11744\"],[\"-118.19750\",\"34.11744\"],[\"-118.19750\",\"34.11744\"],[\"-118.19750\",\"34.11744\"],[\"-118.19750\",\"34.11744\"],[\"-118.19750\",\"34.11744\"],[\"-118.19750\",\"34.11744\"],[\"-118.19748\",\"34.11658\"],[\"-118.19744\",\"34.11660\"],[\"-118.19744\",\"34.11660\"],[\"-118.19744\",\"34.11660\"],[\"-118.19744\",\"34.11660\"],[\"-118.19744\",\"34.11660\"],[\"-118.19744\",\"34.11660\"],[\"-118.19744\",\"34.11660\"],[\"-118.19744\",\"34.11660\"],[\"-118.19744\",\"34.11660\"],[\"-118.19744\",\"34.11660\"],[\"-118.19744\",\"34.11660\"],[\"-118.19744\",\"34.11660\"],[\"-118.19776\",\"34.11612\"],[\"-118.19778\",\"34.11609\"],[\"-118.19778\",\"34.11609\"],[\"-118.19778\",\"34.11609\"],[\"-118.19778\",\"34.11609\"],[\"-118.19778\",\"34.11609\"],[\"-118.19778\",\"34.11609\"],[\"-118.19778\",\"34.11609\"],[\"-118.19778\",\"34.11609\"],[\"-118.19778\",\"34.11609\"],[\"-118.19778\",\"34.11609\"],[\"-118.19778\",\"34.11609\"],[\"-118.19778\",\"34.11609\"],[\"-118.19815\",\"34.11502\"],[\"-118.19815\",\"34.11502\"],[\"-118.19815\",\"34.11502\"],[\"-118.19815\",\"34.11502\"],[\"-118.19815\",\"34.11502\"],[\"-118.19815\",\"34.11502\"],[\"-118.19815\",\"34.11502\"],[\"-118.19815\",\"34.11502\"],[\"-118.19815\",\"34.11502\"],[\"-118.19815\",\"34.11502\"],[\"-118.19815\",\"34.11502\"],[\"-118.19815\",\"34.11502\"],[\"-118.19815\",\"34.11502\"],[\"-118.19815\",\"34.11502\"],[\"-118.19815\",\"34.11502\"],[\"-118.19881\",\"34.11348\"],[\"-118.19881\",\"34.11348\"],[\"-118.19881\",\"34.11348\"],[\"-118.19881\",\"34.11348\"],[\"-118.19881\",\"34.11348\"],[\"-118.19881\",\"34.11348\"],[\"-118.19881\",\"34.11348\"],[\"-118.19881\",\"34.11348\"],[\"-118.19881\",\"34.11348\"],[\"-118.19881\",\"34.11348\"],[\"-118.19881\",\"34.11348\"],[\"-118.19820\",\"34.11250\"],[\"-118.19818\",\"34.11250\"],[\"-118.19818\",\"34.11250\"],[\"-118.19818\",\"34.11250\"],[\"-118.19798\",\"34.11209\"],[\"-118.19801\",\"34.11208\"],[\"-118.19801\",\"34.11208\"],[\"-118.19826\",\"34.11177\"],[\"-118.19830\",\"34.11176\"],[\"-118.19830\",\"34.11176\"],[\"-118.19830\",\"34.11176\"],[\"-118.19804\",\"34.11150\"],[\"-118.19807\",\"34.11148\"],[\"-118.19807\",\"34.11148\"],[\"-118.19807\",\"34.11148\"],[\"-118.19807\",\"34.11148\"],[\"-118.19675\",\"34.11021\"],[\"-118.19675\",\"34.11022\"],[\"-118.19675\",\"34.11022\"],[\"-118.19675\",\"34.11022\"],[\"-118.19675\",\"34.11022\"],[\"-118.19675\",\"34.11022\"],[\"-118.19636\",\"34.10944\"],[\"-118.19635\",\"34.10943\"],[\"-118.19635\",\"34.10943\"],[\"-118.19602\",\"34.10934\"],[\"-118.19601\",\"34.10934\"],[\"-118.19601\",\"34.10934\"],[\"-118.19601\",\"34.10934\"],[\"-118.19574\",\"34.10902\"],[\"-118.19572\",\"34.10901\"],[\"-118.19572\",\"34.10901\"],[\"-118.19557\",\"34.10880\"],[\"-118.19555\",\"34.10878\"],[\"-118.19555\",\"34.10878\"],[\"-118.19555\",\"34.10878\"],[\"-118.19507\",\"34.10843\"],[\"-118.19504\",\"34.10841\"],[\"-118.19504\",\"34.10841\"],[\"-118.19504\",\"34.10841\"],[\"-118.19479\",\"34.10847\"],[\"-118.19481\",\"34.10850\"],[\"-118.19481\",\"34.10850\"],[\"-118.19481\",\"34.10850\"],[\"-118.19481\",\"34.10850\"],[\"-118.19481\",\"34.10850\"],[\"-118.19400\",\"34.10834\"],[\"-118.19401\",\"34.10836\"],[\"-118.19401\",\"34.10836\"],[\"-118.19226\",\"34.10811\"],[\"-118.19226\",\"34.10811\"],[\"-118.19103\",\"34.10813\"],[\"-118.19058\",\"34.10815\"],[\"-118.19057\",\"34.10817\"],[\"-118.19057\",\"34.10817\"],[\"-118.19057\",\"34.10817\"],[\"-118.19057\",\"34.10817\"],[\"-118.18789\",\"34.11099\"],[\"-118.18789\",\"34.11101\"],[\"-118.18789\",\"34.11101\"],[\"-118.18789\",\"34.11101\"],[\"-118.18767\",\"34.11223\"],[\"-118.18766\",\"34.11222\"],[\"-118.18766\",\"34.11222\"],[\"-118.18800\",\"34.11264\"],[\"-118.18800\",\"34.11264\"],[\"-118.18800\",\"34.11264\"],[\"-118.18800\",\"34.11282\"],[\"-118.18800\",\"34.11283\"],[\"-118.18800\",\"34.11283\"],[\"-118.18845\",\"34.11374\"],[\"-118.18845\",\"34.11374\"],[\"-118.18845\",\"34.11374\"],[\"-118.19052\",\"34.11497\"],[\"-118.19052\",\"34.11497\"],[\"-118.19114\",\"34.11507\"],[\"-118.19115\",\"34.11506\"],[\"-118.19115\",\"34.11506\"],[\"-118.19153\",\"34.11511\"],[\"-118.19153\",\"34.11511\"],[\"-118.19153\",\"34.11511\"],[\"-118.19561\",\"34.11697\"],[\"-118.19561\",\"34.11697\"],[\"-118.19561\",\"34.11697\"],[\"-118.19561\",\"34.11697\"],[\"-118.19561\",\"34.11697\"],[\"-118.19561\",\"34.11697\"],[\"-118.19574\",\"34.11749\"],[\"-118.19572\",\"34.11748\"],[\"-118.19572\",\"34.11748\"],[\"-118.19572\",\"34.11748\"],[\"-118.19596\",\"34.11749\"],[\"-118.19601\",\"34.11748\"],[\"-118.19601\",\"34.11748\"],[\"-118.19601\",\"34.11748\"],[\"-118.19601\",\"34.11748\"],[\"-118.19601\",\"34.11748\"],[\"-118.19601\",\"34.11748\"],[\"-118.19601\",\"34.11748\"],[\"-118.19815\",\"34.11836\"],[\"-118.19815\",\"34.11836\"],[\"-118.19815\",\"34.11836\"],[\"-118.19815\",\"34.11836\"],[\"-118.19815\",\"34.11836\"],[\"-118.19815\",\"34.11836\"],[\"-118.19815\",\"34.11836\"],[\"-118.19815\",\"34.11836\"],[\"-118.19815\",\"34.11836\"],[\"-118.19815\",\"34.11836\"],[\"-118.19815\",\"34.11836\"],[\"-118.19815\",\"34.11836\"],[\"-118.19881\",\"34.11841\"],[\"-118.19881\",\"34.11841\"],[\"-118.19881\",\"34.11841\"],[\"-118.19881\",\"34.11841\"],[\"-118.19881\",\"34.11841\"],[\"-118.19881\",\"34.11841\"],[\"-118.19881\",\"34.11841\"],[\"-118.19601\",\"34.11748\"],[\"-118.19601\",\"34.11748\"],[\"-118.19601\",\"34.11748\"],[\"-118.20157\",\"34.11937\"],[\"-118.20156\",\"34.11935\"],[\"-118.20156\",\"34.11935\"],[\"-118.20156\",\"34.11935\"],[\"-118.20156\",\"34.11935\"],[\"-118.20156\",\"34.11935\"],[\"-118.20156\",\"34.11935\"],[\"-118.20156\",\"34.11935\"],[\"-118.20156\",\"34.11935\"],[\"-118.20156\",\"34.11935\"],[\"-118.20392\",\"34.12006\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.20391\",\"34.12004\"],[\"-118.21747\",\"34.12312\"],[\"-118.21747\",\"34.12312\"],[\"-118.21747\",\"34.12312\"],[\"-118.21766\",\"34.12294\"],[\"-118.21764\",\"34.12298\"],[\"-118.21764\",\"34.12298\"],[\"-118.21764\",\"34.12298\"],[\"-118.21764\",\"34.12298\"],[\"-118.21764\",\"34.12298\"],[\"-118.21764\",\"34.12298\"],[\"-118.21764\",\"34.12298\"],[\"-118.21764\",\"34.12298\"],[\"-118.21764\",\"34.12298\"],[\"-118.21764\",\"34.12298\"],[\"-118.21816\",\"34.12280\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.21815\",\"34.12279\"],[\"-118.23116\",\"34.11520\"],[\"-118.23114\",\"34.11520\"],[\"-118.23114\",\"34.11520\"],[\"-118.23114\",\"34.11520\"],[\"-118.23114\",\"34.11520\"],[\"-118.23178\",\"34.11456\"],[\"-118.23178\",\"34.11456\"],[\"-118.23178\",\"34.11456\"],[\"-118.23177\",\"34.11399\"],[\"-118.23177\",\"34.11399\"],[\"-118.23167\",\"34.11360\"],[\"-118.23166\",\"34.11362\"],[\"-118.23166\",\"34.11362\"],[\"-118.23166\",\"34.11362\"],[\"-118.23315\",\"34.10398\"],[\"-118.23315\",\"34.10398\"],[\"-118.23318\",\"34.10257\"],[\"-118.23315\",\"34.10259\"],[\"-118.23315\",\"34.10259\"],[\"-118.23296\",\"34.10211\"],[\"-118.23298\",\"34.10207\"],[\"-118.23298\",\"34.10207\"],[\"-118.23324\",\"34.09950\"],[\"-118.23320\",\"34.09947\"],[\"-118.23318\",\"34.09804\"],[\"-118.23320\",\"34.09802\"],[\"-118.23320\",\"34.09802\"],[\"-118.23341\",\"34.09708\"],[\"-118.23338\",\"34.09709\"],[\"-118.23338\",\"34.09709\"],[\"-118.23329\",\"34.09671\"],[\"-118.23332\",\"34.09672\"],[\"-118.23332\",\"34.09672\"],[\"-118.23324\",\"34.09433\"],[\"-118.23320\",\"34.09435\"],[\"-118.23320\",\"34.09435\"],[\"-118.23335\",\"34.09337\"],[\"-118.23338\",\"34.09337\"],[\"-118.23338\",\"34.09337\"],[\"-118.23329\",\"34.09268\"],[\"-118.23332\",\"34.09267\"],[\"-118.23332\",\"34.09267\"],[\"-118.23357\",\"34.09213\"],[\"-118.23360\",\"34.09211\"],[\"-118.23360\",\"34.09211\"],[\"-118.23385\",\"34.09103\"],[\"-118.23385\",\"34.09103\"],[\"-118.23641\",\"34.08667\"],[\"-118.23641\",\"34.08667\"],[\"-118.23683\",\"34.08646\"],[\"-118.23687\",\"34.08648\"],[\"-118.23687\",\"34.08648\"],[\"-118.23817\",\"34.08463\"],[\"-118.23818\",\"34.08462\"],[\"-118.23818\",\"34.08462\"],[\"-118.23890\",\"34.08357\"],[\"-118.23887\",\"34.08355\"],[\"-118.23887\",\"34.08355\"],[\"-118.23890\",\"34.08321\"],[\"-118.23893\",\"34.08322\"],[\"-118.23893\",\"34.08322\"],[\"-118.23935\",\"34.08293\"],[\"-118.23938\",\"34.08294\"],[\"-118.23938\",\"34.08294\"],[\"-118.23957\",\"34.08252\"],[\"-118.23956\",\"34.08252\"],[\"-118.23956\",\"34.08252\"],[\"-118.24080\",\"34.08069\"],[\"-118.24081\",\"34.08066\"],[\"-118.24081\",\"34.08066\"],[\"-118.24153\",\"34.07996\"],[\"-118.24153\",\"34.07996\"],[\"-118.24153\",\"34.07996\"],[\"-118.24293\",\"34.07749\"],[\"-118.24293\",\"34.07749\"],[\"-118.24316\",\"34.07707\"],[\"-118.24316\",\"34.07708\"],[\"-118.24316\",\"34.07708\"],[\"-118.24378\",\"34.07634\"],[\"-118.24373\",\"34.07633\"],[\"-118.24373\",\"34.07633\"],[\"-118.24686\",\"34.07309\"],[\"-118.24682\",\"34.07307\"],[\"-118.24682\",\"34.07307\"],[\"-118.24725\",\"34.07281\"],[\"-118.24728\",\"34.07279\"],[\"-118.24728\",\"34.07279\"],[\"-118.24728\",\"34.07279\"],[\"-118.24989\",\"34.07057\"],[\"-118.24986\",\"34.07061\"],[\"-118.24986\",\"34.07061\"],[\"-118.25061\",\"34.06989\"],[\"-118.25060\",\"34.06991\"],[\"-118.25060\",\"34.06991\"],[\"-118.25089\",\"34.06947\"],[\"-118.25094\",\"34.06944\"],[\"-118.25094\",\"34.06944\"],[\"-118.25274\",\"34.06801\"],[\"-118.25277\",\"34.06800\"],[\"-118.25277\",\"34.06800\"],[\"-118.25277\",\"34.06800\"],[\"-118.25277\",\"34.06800\"],[\"-118.25342\",\"34.06650\"],[\"-118.25340\",\"34.06651\"],[\"-118.25340\",\"34.06651\"],[\"-118.25650\",\"34.06416\"],[\"-118.25649\",\"34.06418\"],[\"-118.25649\",\"34.06418\"],[\"-118.25745\",\"34.06256\"],[\"-118.25747\",\"34.06255\"],[\"-118.25747\",\"34.06255\"],[\"-118.25796\",\"34.06219\"],[\"-118.25792\",\"34.06218\"],[\"-118.25792\",\"34.06218\"],[\"-118.26317\",\"34.05853\"],[\"-118.26319\",\"34.05855\"],[\"-118.26319\",\"34.05855\"],[\"-118.26418\",\"34.05798\"],[\"-118.26416\",\"34.05799\"],[\"-118.26416\",\"34.05799\"],[\"-118.26693\",\"34.05565\"],[\"-118.26696\",\"34.05566\"],[\"-118.26696\",\"34.05566\"],[\"-118.26765\",\"34.05510\"],[\"-118.26771\",\"34.05510\"],[\"-118.26771\",\"34.05510\"],[\"-118.26771\",\"34.05510\"],[\"-118.27194\",\"34.05143\"],[\"-118.27194\",\"34.05143\"],[\"-118.27194\",\"34.05143\"],[\"-118.30141\",\"34.02173\"],[\"-118.30141\",\"34.02173\"],[\"-118.30566\",\"34.01770\"],[\"-118.30570\",\"34.01768\"],[\"-118.30570\",\"34.01768\"],[\"-118.30364\",\"34.01729\"],[\"-118.30364\",\"34.01730\"],[\"-118.30364\",\"34.01730\"],[\"-118.30314\",\"34.01697\"],[\"-118.30318\",\"34.01698\"],[\"-118.30318\",\"34.01698\"],[\"-118.30318\",\"34.01698\"],[\"-118.30318\",\"34.01698\"],[\"-118.30201\",\"34.01852\"],[\"-118.30204\",\"34.01851\"],[\"-118.30204\",\"34.01851\"],[\"-118.30204\",\"34.01851\"],[\"-118.30204\",\"34.01851\"],[\"-118.30364\",\"34.02024\"],[\"-118.30364\",\"34.02024\"],[\"-118.30342\",\"34.02003\"],[\"-118.30341\",\"34.02005\"],[\"-118.30341\",\"34.02005\"],[\"-118.30168\",\"34.01889\"],[\"-118.30170\",\"34.01889\"],[\"-118.30170\",\"34.01889\"],[\"-118.30084\",\"34.01880\"],[\"-118.30084\",\"34.01884\"],[\"-118.30084\",\"34.01884\"],[\"-118.30084\",\"34.01921\"],[\"-118.30084\",\"34.01921\"],[\"-118.30084\",\"34.01921\"],[\"-118.30238\",\"34.01949\"],[\"-118.30238\",\"34.01949\"],[\"-118.30173\",\"34.01917\"],[\"-118.30175\",\"34.01917\"],[\"-118.30175\",\"34.01917\"],[\"-118.30151\",\"34.01930\"],[\"-118.30151\",\"34.01930\"],[\"-118.30151\",\"34.01930\"],[\"-118.30095\",\"34.01991\"],[\"-118.30095\",\"34.01991\"],[\"-118.30218\",\"34.02013\"],[\"-118.30215\",\"34.02014\"],[\"-118.30215\",\"34.02014\"],[\"-118.30246\",\"34.02013\"],[\"-118.30250\",\"34.02014\"],[\"-118.30250\",\"34.02014\"],[\"-118.30241\",\"34.02003\"],[\"-118.30244\",\"34.02005\"],[\"-118.30244\",\"34.02005\"],[\"-118.30244\",\"34.02005\"],[\"-118.30244\",\"34.02005\"],[\"-118.30190\",\"34.01953\"],[\"-118.30187\",\"34.01954\"],[\"-118.30187\",\"34.01954\"],[\"-118.30179\",\"34.01944\"],[\"-118.30175\",\"34.01944\"],[\"-118.30175\",\"34.01944\"],[\"-118.30123\",\"34.01930\"],[\"-118.30124\",\"34.01926\"],[\"-118.30124\",\"34.01926\"],[\"-118.30089\",\"34.01926\"],[\"-118.30090\",\"34.01926\"],[\"-118.30090\",\"34.01926\"],[\"-118.30084\",\"34.01921\"],[\"-118.30084\",\"34.01921\"],[\"-118.30084\",\"34.01921\"],[\"-118.30084\",\"34.01921\"],[\"-118.30028\",\"34.01967\"],[\"-118.30027\",\"34.01968\"],[\"-118.30027\",\"34.01968\"],[\"-118.30016\",\"34.01985\"],[\"-118.30016\",\"34.01985\"],[\"-118.30016\",\"34.01985\"],[\"-118.30050\",\"34.01996\"],[\"-118.30050\",\"34.01996\"],[\"-118.30050\",\"34.01996\"],[\"-118.30050\",\"34.01996\"],[\"-118.30073\",\"34.01962\"],[\"-118.30072\",\"34.01963\"],[\"-118.30072\",\"34.01963\"],[\"-118.30050\",\"34.01939\"],[\"-118.30050\",\"34.01939\"],[\"-118.30038\",\"34.01935\"],[\"-118.30038\",\"34.01935\"],[\"-118.30038\",\"34.01935\"],[\"-118.30038\",\"34.01935\"],[\"-118.29944\",\"34.01976\"],[\"-118.29941\",\"34.01972\"],[\"-118.29941\",\"34.01972\"],[\"-118.29938\",\"34.01985\"],[\"-118.29941\",\"34.01982\"],[\"-118.29941\",\"34.01982\"],[\"-118.29941\",\"34.01982\"],[\"-118.30005\",\"34.01958\"],[\"-118.30004\",\"34.01958\"],[\"-118.30004\",\"34.01958\"],[\"-118.29972\",\"34.01935\"],[\"-118.29969\",\"34.01930\"],[\"-118.29969\",\"34.01930\"],[\"-118.29960\",\"34.01935\"],[\"-118.29964\",\"34.01935\"],[\"-118.29964\",\"34.01935\"],[\"-118.29927\",\"34.01930\"],[\"-118.29924\",\"34.01930\"],[\"-118.29924\",\"34.01930\"],[\"-118.29927\",\"34.01944\"],[\"-118.29929\",\"34.01944\"],[\"-118.29929\",\"34.01944\"],[\"-118.29929\",\"34.01944\"],[\"-118.29929\",\"34.01944\"],[\"-118.29977\",\"34.01958\"],[\"-118.29975\",\"34.01958\"],[\"-118.29975\",\"34.01958\"],[\"-118.30000\",\"34.01953\"],[\"-118.29998\",\"34.01949\"],[\"-118.30039\",\"34.01958\"],[\"-118.30038\",\"34.01954\"],[\"-118.30038\",\"34.01954\"],[\"-118.30056\",\"34.01944\"],[\"-118.30055\",\"34.01944\"],[\"-118.30055\",\"34.01944\"],[\"-118.30039\",\"34.01889\"],[\"-118.30038\",\"34.01889\"],[\"-118.30038\",\"34.01889\"],[\"-118.30038\",\"34.01889\"],[\"-118.29912\",\"34.01926\"],[\"-118.29912\",\"34.01926\"],[\"-118.29912\",\"34.01926\"],[\"-118.29912\",\"34.01926\"],[\"-118.29912\",\"34.01926\"],[\"-118.30011\",\"34.01935\"],[\"-118.30009\",\"34.01935\"],[\"-118.30009\",\"34.01935\"],[\"-118.30009\",\"34.01935\"],[\"-118.30044\",\"34.01871\"],[\"-118.30050\",\"34.01870\"],[\"-118.30050\",\"34.01870\"],[\"-118.30050\",\"34.01870\"],[\"-118.30050\",\"34.01870\"],[\"-118.29994\",\"34.01793\"],[\"-118.29992\",\"34.01795\"],[\"-118.29992\",\"34.01795\"],[\"-118.29938\",\"34.01793\"],[\"-118.29912\",\"34.01786\"],[\"-118.29912\",\"34.01786\"],[\"-118.29912\",\"34.01786\"],[\"-118.29992\",\"34.01982\"],[\"-118.29992\",\"34.01982\"],[\"-118.30089\",\"34.01990\"],[\"-118.30090\",\"34.01991\"],[\"-118.30090\",\"34.01991\"],[\"-118.30151\",\"34.01999\"],[\"-118.30153\",\"34.01996\"],[\"-118.30153\",\"34.01996\"],[\"-118.30207\",\"34.02013\"],[\"-118.30210\",\"34.02014\"],[\"-118.30210\",\"34.02014\"],[\"-118.30207\",\"34.01917\"],[\"-118.30210\",\"34.01917\"],[\"-118.30210\",\"34.01917\"],[\"-118.30196\",\"34.01917\"],[\"-118.30193\",\"34.01917\"],[\"-118.30193\",\"34.01917\"],[\"-118.30101\",\"34.01894\"],[\"-118.30101\",\"34.01893\"],[\"-118.30101\",\"34.01893\"],[\"-118.30039\",\"34.01917\"],[\"-118.30038\",\"34.01917\"],[\"-118.30038\",\"34.01917\"],[\"-118.30038\",\"34.01917\"],[\"-118.30038\",\"34.01917\"],[\"-118.30022\",\"34.01958\"],[\"-118.30027\",\"34.01958\"],[\"-118.30027\",\"34.01958\"],[\"-118.30039\",\"34.01967\"],[\"-118.30038\",\"34.01968\"],[\"-118.30038\",\"34.01968\"],[\"-118.30050\",\"34.01990\"],[\"-118.30050\",\"34.01991\"],[\"-118.30050\",\"34.01991\"],[\"-118.30168\",\"34.01994\"],[\"-118.30170\",\"34.01996\"],[\"-118.30170\",\"34.01996\"],[\"-118.30170\",\"34.01996\"],[\"-118.30263\",\"34.01935\"],[\"-118.30261\",\"34.01935\"],[\"-118.30261\",\"34.01935\"],[\"-118.30274\",\"34.01898\"],[\"-118.30278\",\"34.01898\"],[\"-118.30278\",\"34.01898\"],[\"-118.30218\",\"34.01857\"],[\"-118.30221\",\"34.01861\"],[\"-118.30221\",\"34.01861\"],[\"-118.30207\",\"34.01862\"],[\"-118.30204\",\"34.01861\"],[\"-118.30204\",\"34.01861\"],[\"-118.30129\",\"34.01852\"],[\"-118.30130\",\"34.01851\"],[\"-118.30130\",\"34.01851\"],[\"-118.30130\",\"34.01851\"],[\"-118.30050\",\"34.01963\"],[\"-118.30050\",\"34.01963\"],[\"-118.30151\",\"34.01994\"],[\"-118.30153\",\"34.01996\"],[\"-118.30153\",\"34.01996\"],[\"-118.30185\",\"34.01999\"],[\"-118.30187\",\"34.02000\"],[\"-118.30187\",\"34.02000\"],[\"-118.30229\",\"34.01939\"],[\"-118.30233\",\"34.01940\"],[\"-118.30233\",\"34.01940\"],[\"-118.30233\",\"34.01940\"],[\"-118.30233\",\"34.01940\"],[\"-118.30224\",\"34.01921\"],[\"-118.30227\",\"34.01921\"],[\"-118.30227\",\"34.01921\"],[\"-118.30185\",\"34.01903\"],[\"-118.30187\",\"34.01903\"],[\"-118.30187\",\"34.01903\"],[\"-118.30033\",\"34.01917\"],[\"-118.30032\",\"34.01917\"],[\"-118.30028\",\"34.01912\"],[\"-118.30027\",\"34.01912\"],[\"-118.30027\",\"34.01912\"],[\"-118.29960\",\"34.01967\"],[\"-118.29958\",\"34.01963\"],[\"-118.29958\",\"34.01963\"],[\"-118.29966\",\"34.02003\"],[\"-118.29964\",\"34.02005\"],[\"-118.29964\",\"34.02005\"],[\"-118.29964\",\"34.02005\"],[\"-118.29964\",\"34.02005\"],[\"-118.30257\",\"34.02072\"],[\"-118.30256\",\"34.02070\"],[\"-118.30256\",\"34.02070\"],[\"-118.30235\",\"34.01884\"],[\"-118.30233\",\"34.01884\"],[\"-118.30233\",\"34.01884\"],[\"-118.30123\",\"34.01807\"],[\"-118.30124\",\"34.01805\"],[\"-118.30124\",\"34.01805\"],[\"-118.30124\",\"34.01805\"],[\"-118.29889\",\"34.01944\"],[\"-118.29889\",\"34.01944\"],[\"-118.29876\",\"34.01994\"],[\"-118.29872\",\"34.01996\"],[\"-118.29872\",\"34.01996\"],[\"-118.29872\",\"34.01996\"],[\"-118.30359\",\"34.01847\"],[\"-118.30359\",\"34.01847\"],[\"-118.30359\",\"34.01847\"],[\"-118.30359\",\"34.01847\"],[\"-118.30386\",\"34.00964\"],[\"-118.30387\",\"34.00967\"],[\"-118.30387\",\"34.00967\"],[\"-118.30387\",\"34.00967\"],[\"-118.30387\",\"34.00967\"],[\"-118.31017\",\"34.01032\"],[\"-118.31048\",\"34.01060\"],[\"-118.31045\",\"34.01060\"],[\"-118.31045\",\"34.01060\"],[\"-118.32488\",\"34.00159\"],[\"-118.32207\",\"34.00040\"],[\"-118.32207\",\"34.00040\"],[\"-118.32247\",\"34.00035\"],[\"-118.32247\",\"34.00036\"],[\"-118.32253\",\"34.00026\"],[\"-118.32253\",\"34.00026\"],[\"-118.32253\",\"34.00026\"],[\"-118.32253\",\"34.00026\"],[\"-118.32320\",\"33.99976\"],[\"-118.32321\",\"33.99975\"],[\"-118.32321\",\"33.99975\"],[\"-118.32376\",\"33.99953\"],[\"-118.32373\",\"33.99957\"],[\"-118.32373\",\"33.99957\"],[\"-118.32348\",\"33.99916\"],[\"-118.32350\",\"33.99919\"],[\"-118.32350\",\"33.99919\"],[\"-118.32208\",\"33.99692\"],[\"-118.32207\",\"33.99691\"],[\"-118.32207\",\"33.99691\"],[\"-118.32079\",\"33.99696\"],[\"-118.32075\",\"33.99696\"],[\"-118.32075\",\"33.99696\"],[\"-118.31704\",\"33.99852\"],[\"-118.31703\",\"33.99850\"],[\"-118.31703\",\"33.99850\"],[\"-118.31709\",\"34.00394\"],[\"-118.31709\",\"34.00394\"],[\"-118.31788\",\"34.00433\"],[\"-118.31789\",\"34.00436\"],[\"-118.31789\",\"34.00436\"],[\"-118.31827\",\"34.00415\"],[\"-118.31829\",\"34.00418\"],[\"-118.31829\",\"34.00418\"],[\"-118.31939\",\"34.00378\"],[\"-118.31938\",\"34.00376\"],[\"-118.31938\",\"34.00376\"],[\"-118.31938\",\"34.00376\"],[\"-118.31938\",\"34.00376\"],[\"-118.31938\",\"34.00376\"],[\"-118.31898\",\"33.99943\"],[\"-118.31898\",\"33.99943\"],[\"-118.31898\",\"33.99943\"],[\"-118.31898\",\"33.99943\"],[\"-118.31594\",\"33.99882\"],[\"-118.31594\",\"33.99882\"],[\"-118.31446\",\"33.99852\"],[\"-118.31446\",\"33.99854\"],[\"-118.31446\",\"33.99854\"],[\"-118.31401\",\"33.99811\"],[\"-118.31406\",\"33.99812\"],[\"-118.31406\",\"33.99812\"],[\"-118.31199\",\"33.99774\"],[\"-118.31199\",\"33.99774\"],[\"-118.31039\",\"33.99743\"],[\"-118.31039\",\"33.99743\"],[\"-118.30997\",\"33.99728\"],[\"-118.30999\",\"33.99729\"],[\"-118.30999\",\"33.99729\"],[\"-118.30999\",\"33.99729\"],[\"-118.30801\",\"33.99692\"],[\"-118.30799\",\"33.99691\"],[\"-118.30799\",\"33.99691\"],[\"-118.30740\",\"33.99669\"],[\"-118.30742\",\"33.99673\"],[\"-118.30742\",\"33.99673\"],[\"-118.30667\",\"33.99655\"],[\"-118.30662\",\"33.99654\"],[\"-118.30662\",\"33.99654\"],[\"-118.30662\",\"33.99654\"],[\"-118.30594\",\"33.99641\"],[\"-118.30599\",\"33.99645\"],[\"-118.30599\",\"33.99645\"],[\"-118.30437\",\"33.99605\"],[\"-118.30437\",\"33.99605\"],[\"-118.30256\",\"33.99547\"],[\"-118.30252\",\"33.99518\"],[\"-118.30250\",\"33.99519\"],[\"-118.30250\",\"33.99519\"],[\"-118.29893\",\"33.99426\"],[\"-118.29895\",\"33.99426\"],[\"-118.29895\",\"33.99426\"],[\"-118.29860\",\"33.99413\"],[\"-118.29861\",\"33.99412\"],[\"-118.29861\",\"33.99412\"],[\"-118.29719\",\"33.99371\"],[\"-118.29718\",\"33.99370\"],[\"-118.29718\",\"33.99370\"],[\"-118.29708\",\"33.99353\"],[\"-118.29706\",\"33.99356\"],[\"-118.29706\",\"33.99356\"],[\"-118.29669\",\"33.99353\"],[\"-118.29672\",\"33.99351\"],[\"-118.29672\",\"33.99351\"],[\"-118.29672\",\"33.99351\"],[\"-118.29672\",\"33.99351\"],[\"-118.28762\",\"33.98541\"],[\"-118.28762\",\"33.98541\"],[\"-118.28733\",\"33.98520\"],[\"-118.28733\",\"33.98523\"],[\"-118.28733\",\"33.98523\"],[\"-118.28654\",\"33.98428\"],[\"-118.28659\",\"33.98430\"],[\"-118.28659\",\"33.98430\"],[\"-118.28638\",\"33.98378\"],[\"-118.28636\",\"33.98379\"],[\"-118.28636\",\"33.98379\"],[\"-118.28636\",\"33.98379\"],[\"-118.28144\",\"33.97638\"],[\"-118.28144\",\"33.97638\"],[\"-118.28077\",\"33.97549\"],[\"-118.28081\",\"33.97550\"],[\"-118.28081\",\"33.97550\"],[\"-118.28055\",\"33.97527\"],[\"-118.28053\",\"33.97527\"],[\"-118.28053\",\"33.97527\"],[\"-118.28053\",\"33.97527\"],[\"-118.27802\",\"33.97348\"],[\"-118.27806\",\"33.97345\"],[\"-118.27806\",\"33.97345\"],[\"-118.27696\",\"33.97302\"],[\"-118.27692\",\"33.97303\"],[\"-118.27692\",\"33.97303\"],[\"-118.27692\",\"33.97303\"],[\"-118.27692\",\"33.97303\"],[\"-118.26334\",\"33.97192\"],[\"-118.26336\",\"33.97191\"],[\"-118.26227\",\"33.97275\"],[\"-118.26227\",\"33.97275\"],[\"-118.26227\",\"33.97275\"],[\"-118.26160\",\"33.97302\"],[\"-118.26159\",\"33.97303\"],[\"-118.26159\",\"33.97303\"],[\"-118.26159\",\"33.97303\"],[\"-118.26159\",\"33.97303\"],[\"-118.26003\",\"33.97307\"],[\"-118.26004\",\"33.97308\"],[\"-118.26004\",\"33.97308\"],[\"-118.25728\",\"33.97435\"],[\"-118.25729\",\"33.97434\"],[\"-118.25729\",\"33.97434\"],[\"-118.25700\",\"33.97476\"],[\"-118.25701\",\"33.97475\"],[\"-118.25701\",\"33.97475\"],[\"-118.25701\",\"33.97475\"],[\"-118.25701\",\"33.97475\"],[\"-118.25459\",\"33.97691\"],[\"-118.25460\",\"33.97694\"],[\"-118.25460\",\"33.97694\"],[\"-118.25476\",\"33.97842\"],[\"-118.25472\",\"33.97843\"],[\"-118.25472\",\"33.97843\"],[\"-118.25459\",\"33.97879\"],[\"-118.25460\",\"33.97880\"],[\"-118.25460\",\"33.97880\"],[\"-118.25476\",\"33.98190\"],[\"-118.25478\",\"33.98192\"],[\"-118.25478\",\"33.98192\"],[\"-118.25465\",\"33.98218\"],[\"-118.25466\",\"33.98220\"],[\"-118.25466\",\"33.98220\"],[\"-118.25532\",\"33.98456\"],[\"-118.25529\",\"33.98453\"],[\"-118.25529\",\"33.98453\"],[\"-118.25529\",\"33.98453\"],[\"-118.25594\",\"33.98593\"],[\"-118.25598\",\"33.98593\"],[\"-118.25598\",\"33.98593\"],[\"-118.25700\",\"33.98712\"],[\"-118.25701\",\"33.98714\"],[\"-118.25701\",\"33.98714\"],[\"-118.25734\",\"33.98740\"],[\"-118.25729\",\"33.98742\"],[\"-118.25729\",\"33.98742\"],[\"-118.25729\",\"33.98742\"],[\"-118.25729\",\"33.98742\"],[\"-118.26076\",\"33.99074\"],[\"-118.26078\",\"33.99072\"],[\"-118.26078\",\"33.99072\"],[\"-118.26121\",\"33.99106\"],[\"-118.26118\",\"33.99105\"],[\"-118.26118\",\"33.99105\"],[\"-118.26199\",\"33.99197\"],[\"-118.26199\",\"33.99198\"],[\"-118.26199\",\"33.99198\"],[\"-118.26239\",\"33.99239\"],[\"-118.26239\",\"33.99240\"],[\"-118.26239\",\"33.99240\"],[\"-118.26239\",\"33.99240\"],[\"-118.26239\",\"33.99240\"],[\"-118.26474\",\"33.99527\"],[\"-118.26473\",\"33.99528\"],[\"-118.26473\",\"33.99528\"],[\"-118.26513\",\"33.99559\"],[\"-118.26513\",\"33.99561\"],[\"-118.26513\",\"33.99561\"],[\"-118.26782\",\"33.99834\"],[\"-118.26782\",\"33.99834\"],[\"-118.26782\",\"33.99834\"],[\"-118.26994\",\"34.00054\"],[\"-118.26994\",\"34.00054\"],[\"-118.27124\",\"34.00191\"],[\"-118.27126\",\"34.00194\"],[\"-118.27219\",\"34.00319\"],[\"-118.27223\",\"34.00320\"],[\"-118.27223\",\"34.00320\"],[\"-118.27247\",\"34.00356\"],[\"-118.27251\",\"34.00357\"],[\"-118.27251\",\"34.00357\"],[\"-118.27337\",\"34.00438\"],[\"-118.27337\",\"34.00441\"],[\"-118.27337\",\"34.00441\"],[\"-118.27388\",\"34.00539\"],[\"-118.27388\",\"34.00539\"],[\"-118.27475\",\"34.00678\"],[\"-118.27475\",\"34.00678\"],[\"-118.27517\",\"34.00735\"],[\"-118.27515\",\"34.00739\"],[\"-118.27515\",\"34.00739\"],[\"-118.27578\",\"34.00873\"],[\"-118.27578\",\"34.00874\"],[\"-118.27578\",\"34.00874\"],[\"-118.27741\",\"34.01093\"],[\"-118.27738\",\"34.01093\"],[\"-118.27738\",\"34.01093\"],[\"-118.27738\",\"34.01093\"],[\"-118.27937\",\"34.01408\"],[\"-118.27938\",\"34.01409\"],[\"-118.27938\",\"34.01409\"],[\"-118.27948\",\"34.01468\"],[\"-118.27950\",\"34.01470\"],[\"-118.27950\",\"34.01470\"],[\"-118.28083\",\"34.01839\"],[\"-118.28083\",\"34.01839\"],[\"-118.28083\",\"34.01839\"],[\"-118.28184\",\"34.02107\"],[\"-118.28184\",\"34.02107\"],[\"-118.28234\",\"34.02296\"],[\"-118.28236\",\"34.02298\"],[\"-118.28236\",\"34.02298\"],[\"-118.28240\",\"34.02324\"],[\"-118.28236\",\"34.02322\"],[\"-118.28236\",\"34.02322\"],[\"-118.28363\",\"34.02686\"],[\"-118.28367\",\"34.02685\"],[\"-118.28367\",\"34.02685\"],[\"-118.28374\",\"34.02736\"],[\"-118.28373\",\"34.02736\"],[\"-118.28373\",\"34.02736\"],[\"-118.28436\",\"34.02887\"],[\"-118.28436\",\"34.02889\"],[\"-118.28436\",\"34.02889\"],[\"-118.28447\",\"34.02933\"],[\"-118.28447\",\"34.02936\"],[\"-118.28447\",\"34.02936\"],[\"-118.28447\",\"34.02936\"],[\"-118.28520\",\"34.03152\"],[\"-118.28520\",\"34.03152\"],[\"-118.28716\",\"34.03825\"],[\"-118.28716\",\"34.03825\"],[\"-118.28800\",\"34.04160\"],[\"-118.28796\",\"34.04160\"],[\"-118.28796\",\"34.04160\"],[\"-118.28796\",\"34.04160\"],[\"-118.28796\",\"34.04160\"],[\"-118.28856\",\"34.04393\"],[\"-118.28854\",\"34.04393\"],[\"-118.28854\",\"34.04393\"],[\"-118.28856\",\"34.04439\"],[\"-118.28859\",\"34.04440\"],[\"-118.28859\",\"34.04440\"],[\"-118.28907\",\"34.04604\"],[\"-118.28905\",\"34.04603\"],[\"-118.28905\",\"34.04603\"],[\"-118.28979\",\"34.04842\"],[\"-118.28979\",\"34.04840\"],[\"-118.28979\",\"34.05089\"],[\"-118.28979\",\"34.05091\"],[\"-118.28979\",\"34.05091\"],[\"-118.28985\",\"34.05496\"],[\"-118.28985\",\"34.05496\"],[\"-118.28985\",\"34.05496\"],[\"-118.28985\",\"34.05519\"],[\"-118.28985\",\"34.05520\"],[\"-118.28985\",\"34.05520\"],[\"-118.28985\",\"34.05520\"],[\"-118.29340\",\"34.06860\"],[\"-118.29340\",\"34.06860\"],[\"-118.29400\",\"34.06828\"],[\"-118.29403\",\"34.06828\"],[\"-118.29403\",\"34.06828\"],[\"-118.29703\",\"34.06750\"],[\"-118.29700\",\"34.06753\"],[\"-118.29792\",\"34.06659\"],[\"-118.29792\",\"34.06656\"],[\"-118.29792\",\"34.06656\"],[\"-118.29815\",\"34.06544\"],[\"-118.29815\",\"34.06544\"],[\"-118.29815\",\"34.06544\"],[\"-118.29764\",\"34.06284\"],[\"-118.29763\",\"34.06283\"],[\"-118.29763\",\"34.06283\"],[\"-118.29703\",\"34.06261\"],[\"-118.29706\",\"34.06264\"],[\"-118.29706\",\"34.06264\"],[\"-118.29635\",\"34.06123\"],[\"-118.29632\",\"34.06120\"],[\"-118.29632\",\"34.06120\"],[\"-118.29562\",\"34.06100\"],[\"-118.29563\",\"34.06102\"],[\"-118.29563\",\"34.06102\"],[\"-118.29546\",\"34.06119\"],[\"-118.29546\",\"34.06120\"],[\"-118.29546\",\"34.06120\"],[\"-118.29546\",\"34.06120\"],[\"-118.29114\",\"34.06133\"],[\"-118.29111\",\"34.06134\"],[\"-118.29111\",\"34.06134\"],[\"-118.29036\",\"34.06572\"],[\"-118.29037\",\"34.06572\"],[\"-118.29037\",\"34.06572\"],[\"-118.29305\",\"34.06686\"],[\"-118.29306\",\"34.06688\"],[\"-118.29306\",\"34.06688\"],[\"-118.29344\",\"34.06686\"],[\"-118.29340\",\"34.06683\"],[\"-118.29340\",\"34.06683\"],[\"-118.29590\",\"34.06531\"],[\"-118.29592\",\"34.06530\"],[\"-118.29592\",\"34.06530\"],[\"-118.29592\",\"34.06530\"],[\"-118.29334\",\"34.06278\"],[\"-118.29334\",\"34.06278\"],[\"-118.29334\",\"34.06278\"],[\"-118.29334\",\"34.06278\"],[\"-118.29334\",\"34.06278\"],[\"-118.29170\",\"34.06563\"],[\"-118.29170\",\"34.06563\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.33615\",\"34.08728\"],[\"-118.27286\",\"34.05897\"],[\"-118.27286\",\"34.05897\"],[\"-118.27292\",\"34.06000\"],[\"-118.27297\",\"34.05999\"],[\"-118.27297\",\"34.05999\"],[\"-118.27376\",\"34.06068\"],[\"-118.27372\",\"34.06069\"],[\"-118.27372\",\"34.06069\"],[\"-118.27388\",\"34.06096\"],[\"-118.27389\",\"34.06097\"],[\"-118.27389\",\"34.06097\"],[\"-118.27389\",\"34.06097\"],[\"-118.27045\",\"34.07331\"],[\"-118.27045\",\"34.07331\"],[\"-118.27051\",\"34.07387\"],[\"-118.27051\",\"34.07386\"],[\"-118.27051\",\"34.07386\"],[\"-118.27029\",\"34.07433\"],[\"-118.27028\",\"34.07433\"],[\"-118.27028\",\"34.07433\"],[\"-118.26984\",\"34.07542\"],[\"-118.26988\",\"34.07540\"],[\"-118.26988\",\"34.07540\"],[\"-118.26988\",\"34.07540\"],[\"-118.26988\",\"34.07540\"],[\"-118.26911\",\"34.07703\"],[\"-118.26914\",\"34.07703\"],[\"-118.26914\",\"34.07703\"],[\"-118.26911\",\"34.07758\"],[\"-118.26914\",\"34.07759\"],[\"-118.26914\",\"34.07759\"],[\"-118.26889\",\"34.07808\"],[\"-118.26891\",\"34.07805\"],[\"-118.26891\",\"34.07805\"],[\"-118.26793\",\"34.07977\"],[\"-118.26794\",\"34.07978\"],[\"-118.26794\",\"34.07978\"],[\"-118.26794\",\"34.07978\"],[\"-118.26794\",\"34.07978\"],[\"-118.26575\",\"34.08220\"],[\"-118.26571\",\"34.08220\"],[\"-118.26571\",\"34.08220\"],[\"-118.26502\",\"34.08252\"],[\"-118.26502\",\"34.08248\"],[\"-118.26502\",\"34.08248\"],[\"-118.26502\",\"34.08248\"],[\"-118.25907\",\"34.08271\"],[\"-118.25907\",\"34.08271\"],[\"-118.25869\",\"34.08238\"],[\"-118.25867\",\"34.08238\"],[\"-118.25867\",\"34.08238\"],[\"-118.25807\",\"34.08197\"],[\"-118.25809\",\"34.08196\"],[\"-118.25809\",\"34.08196\"],[\"-118.25600\",\"34.08023\"],[\"-118.25603\",\"34.08020\"],[\"-118.25603\",\"34.08020\"],[\"-118.25571\",\"34.08005\"],[\"-118.25569\",\"34.08006\"],[\"-118.25569\",\"34.08006\"]]}}];\n    var bounds = null;\n    for (var i = 0; i < geoJsons.length; i++) {\n      var geoJson = L.geoJson(\n      geoJsons[i],\n      {style: {color: 'steelblue',\n               weight: 5.0,\n               dashArray: '1, 0',\n               lineCap: 'butt',\n               lineJoin: 'miter',\n               opacity: 0.8}});\n      geoJson.addTo(map);\n      console.log('Added GeoJSON:');\n      console.log(geoJsons[i]);\n      if (!bounds) {\n        bounds = geoJson.getBounds();\n      } else {\n        bounds.extend(geoJson.getBounds());\n      }\n    }\n    if (null) {\n      map.setView.apply(map, null);\n    } else {\n      console.log('setting bounds to ' + bounds);\n      console.log(bounds);\n      map.fitBounds(bounds);\n    }\n  };\n  if (!document.getElementById('leaflet-css')) {\n    $('<link>')\n      .attr('rel', 'stylesheet')\n      .attr('href', 'http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css')\n      .attr('id', 'leaflet-css')\n      .appendTo('head');\n  }\n  if (!window.leafletJsLoaded) {\n    if (!window.leafletJsIsLoading) {\n      window.leafletJsLoadedCallbacks = [createMap];\n      window.leafletJsIsLoading = true;\n      cachedScript('http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js')\n        .done(function() {\n          window.leafletJsIsLoading = false;\n          window.leafletJsLoaded = true;\n          _.each(window.leafletJsLoadedCallbacks, function(cb) { cb(); });\n          window.leafletJsLoadedCallbacks = [];\n        })\n        .fail(function() { console.log('failed'); });\n    } else {\n      window.leafletJsLoadedCallbacks.push(createMap);\n    }\n  } else {\n    createMap();\n  }\n});\n</script>\n</div>","~:value","#pinkgorilla.ui.leaflet.LeafletView{:geodescs ({:type :line, :desc ([\"34.10650\" \"-118.19212\"] [\"34.10650\" \"-118.19212\"] [\"34.10706\" \"-118.19125\"] [\"34.10706\" \"-118.19120\"] [\"34.10706\" \"-118.19120\"] [\"34.11111\" \"-118.18726\"] [\"34.11125\" \"-118.18697\"] [\"34.11125\" \"-118.18697\"] [\"34.11259\" \"-118.18666\"] [\"34.11260\" \"-118.18668\"] [\"34.11260\" \"-118.18668\"] [\"34.11260\" \"-118.18668\"] [\"34.11260\" \"-118.18668\"] [\"34.11260\" \"-118.18668\"] [\"34.11260\" \"-118.18668\"] [\"34.11260\" \"-118.18668\"] [\"34.11259\" \"-118.18668\"] [\"34.11259\" \"-118.18668\"] [\"34.11259\" \"-118.18668\"] [\"34.11259\" \"-118.18668\"] [\"34.11259\" \"-118.18668\"] [\"34.11259\" \"-118.18668\"] [\"34.11259\" \"-118.18668\"] [\"34.11259\" \"-118.18668\"] [\"34.11259\" \"-118.18668\"] [\"34.12102\" \"-118.18823\"] [\"34.12102\" \"-118.18823\"] [\"34.12102\" \"-118.18823\"] [\"34.12102\" \"-118.18823\"] [\"34.12102\" \"-118.18823\"] [\"34.12102\" \"-118.18823\"] [\"34.12102\" \"-118.18823\"] [\"34.12102\" \"-118.18823\"] [\"34.12207\" \"-118.19109\"] [\"34.12209\" \"-118.19109\"] [\"34.12209\" \"-118.19109\"] [\"34.12209\" \"-118.19109\"] [\"34.12209\" \"-118.19109\"] [\"34.12209\" \"-118.19109\"] [\"34.12209\" \"-118.19109\"] [\"34.12207\" \"-118.19159\"] [\"34.12205\" \"-118.19160\"] [\"34.12205\" \"-118.19160\"] [\"34.12205\" \"-118.19160\"] [\"34.12205\" \"-118.19160\"] [\"34.12205\" \"-118.19160\"] [\"34.12205\" \"-118.19160\"] [\"34.12205\" \"-118.19160\"] [\"34.12180\" \"-118.19238\"] [\"34.12180\" \"-118.19238\"] [\"34.12180\" \"-118.19238\"] [\"34.12180\" \"-118.19238\"] [\"34.12180\" \"-118.19238\"] [\"34.12180\" \"-118.19238\"] [\"34.12180\" \"-118.19238\"] [\"34.12180\" \"-118.19238\"] [\"34.12180\" \"-118.19238\"] [\"34.12180\" \"-118.19238\"] [\"34.12180\" \"-118.19238\"] [\"34.11967\" \"-118.19647\"] [\"34.11967\" \"-118.19647\"] [\"34.11967\" \"-118.19647\"] [\"34.11967\" \"-118.19647\"] [\"34.11967\" \"-118.19647\"] [\"34.11919\" \"-118.19664\"] [\"34.11921\" \"-118.19664\"] [\"34.11921\" \"-118.19664\"] [\"34.11921\" \"-118.19664\"] [\"34.11921\" \"-118.19664\"] [\"34.11921\" \"-118.19664\"] [\"34.11921\" \"-118.19664\"] [\"34.11868\" \"-118.19692\"] [\"34.11869\" \"-118.19693\"] [\"34.11869\" \"-118.19693\"] [\"34.11869\" \"-118.19693\"] [\"34.11869\" \"-118.19693\"] [\"34.11869\" \"-118.19693\"] [\"34.11869\" \"-118.19693\"] [\"34.11869\" \"-118.19693\"] [\"34.11745\" \"-118.19748\"] [\"34.11744\" \"-118.19750\"] [\"34.11744\" \"-118.19750\"] [\"34.11744\" \"-118.19750\"] [\"34.11744\" \"-118.19750\"] [\"34.11744\" \"-118.19750\"] [\"34.11744\" \"-118.19750\"] [\"34.11744\" \"-118.19750\"] [\"34.11658\" \"-118.19748\"] [\"34.11660\" \"-118.19744\"] [\"34.11660\" \"-118.19744\"] [\"34.11660\" \"-118.19744\"] [\"34.11660\" \"-118.19744\"] [\"34.11660\" \"-118.19744\"] [\"34.11660\" \"-118.19744\"] [\"34.11660\" \"-118.19744\"] [\"34.11660\" \"-118.19744\"] [\"34.11660\" \"-118.19744\"] [\"34.11660\" \"-118.19744\"] [\"34.11660\" \"-118.19744\"] [\"34.11660\" \"-118.19744\"] [\"34.11612\" \"-118.19776\"] [\"34.11609\" \"-118.19778\"] [\"34.11609\" \"-118.19778\"] [\"34.11609\" \"-118.19778\"] [\"34.11609\" \"-118.19778\"] [\"34.11609\" \"-118.19778\"] [\"34.11609\" \"-118.19778\"] [\"34.11609\" \"-118.19778\"] [\"34.11609\" \"-118.19778\"] [\"34.11609\" \"-118.19778\"] [\"34.11609\" \"-118.19778\"] [\"34.11609\" \"-118.19778\"] [\"34.11609\" \"-118.19778\"] [\"34.11502\" \"-118.19815\"] [\"34.11502\" \"-118.19815\"] [\"34.11502\" \"-118.19815\"] [\"34.11502\" \"-118.19815\"] [\"34.11502\" \"-118.19815\"] [\"34.11502\" \"-118.19815\"] [\"34.11502\" \"-118.19815\"] [\"34.11502\" \"-118.19815\"] [\"34.11502\" \"-118.19815\"] [\"34.11502\" \"-118.19815\"] [\"34.11502\" \"-118.19815\"] [\"34.11502\" \"-118.19815\"] [\"34.11502\" \"-118.19815\"] [\"34.11502\" \"-118.19815\"] [\"34.11502\" \"-118.19815\"] [\"34.11348\" \"-118.19881\"] [\"34.11348\" \"-118.19881\"] [\"34.11348\" \"-118.19881\"] [\"34.11348\" \"-118.19881\"] [\"34.11348\" \"-118.19881\"] [\"34.11348\" \"-118.19881\"] [\"34.11348\" \"-118.19881\"] [\"34.11348\" \"-118.19881\"] [\"34.11348\" \"-118.19881\"] [\"34.11348\" \"-118.19881\"] [\"34.11348\" \"-118.19881\"] [\"34.11250\" \"-118.19820\"] [\"34.11250\" \"-118.19818\"] [\"34.11250\" \"-118.19818\"] [\"34.11250\" \"-118.19818\"] [\"34.11209\" \"-118.19798\"] [\"34.11208\" \"-118.19801\"] [\"34.11208\" \"-118.19801\"] [\"34.11177\" \"-118.19826\"] [\"34.11176\" \"-118.19830\"] [\"34.11176\" \"-118.19830\"] [\"34.11176\" \"-118.19830\"] [\"34.11150\" \"-118.19804\"] [\"34.11148\" \"-118.19807\"] [\"34.11148\" \"-118.19807\"] [\"34.11148\" \"-118.19807\"] [\"34.11148\" \"-118.19807\"] [\"34.11021\" \"-118.19675\"] [\"34.11022\" \"-118.19675\"] [\"34.11022\" \"-118.19675\"] [\"34.11022\" \"-118.19675\"] [\"34.11022\" \"-118.19675\"] [\"34.11022\" \"-118.19675\"] [\"34.10944\" \"-118.19636\"] [\"34.10943\" \"-118.19635\"] [\"34.10943\" \"-118.19635\"] [\"34.10934\" \"-118.19602\"] [\"34.10934\" \"-118.19601\"] [\"34.10934\" \"-118.19601\"] [\"34.10934\" \"-118.19601\"] [\"34.10902\" \"-118.19574\"] [\"34.10901\" \"-118.19572\"] [\"34.10901\" \"-118.19572\"] [\"34.10880\" \"-118.19557\"] [\"34.10878\" \"-118.19555\"] [\"34.10878\" \"-118.19555\"] [\"34.10878\" \"-118.19555\"] [\"34.10843\" \"-118.19507\"] [\"34.10841\" \"-118.19504\"] [\"34.10841\" \"-118.19504\"] [\"34.10841\" \"-118.19504\"] [\"34.10847\" \"-118.19479\"] [\"34.10850\" \"-118.19481\"] [\"34.10850\" \"-118.19481\"] [\"34.10850\" \"-118.19481\"] [\"34.10850\" \"-118.19481\"] [\"34.10850\" \"-118.19481\"] [\"34.10834\" \"-118.19400\"] [\"34.10836\" \"-118.19401\"] [\"34.10836\" \"-118.19401\"] [\"34.10811\" \"-118.19226\"] [\"34.10811\" \"-118.19226\"] [\"34.10813\" \"-118.19103\"] [\"34.10815\" \"-118.19058\"] [\"34.10817\" \"-118.19057\"] [\"34.10817\" \"-118.19057\"] [\"34.10817\" \"-118.19057\"] [\"34.10817\" \"-118.19057\"] [\"34.11099\" \"-118.18789\"] [\"34.11101\" \"-118.18789\"] [\"34.11101\" \"-118.18789\"] [\"34.11101\" \"-118.18789\"] [\"34.11223\" \"-118.18767\"] [\"34.11222\" \"-118.18766\"] [\"34.11222\" \"-118.18766\"] [\"34.11264\" \"-118.18800\"] [\"34.11264\" \"-118.18800\"] [\"34.11264\" \"-118.18800\"] [\"34.11282\" \"-118.18800\"] [\"34.11283\" \"-118.18800\"] [\"34.11283\" \"-118.18800\"] [\"34.11374\" \"-118.18845\"] [\"34.11374\" \"-118.18845\"] [\"34.11374\" \"-118.18845\"] [\"34.11497\" \"-118.19052\"] [\"34.11497\" \"-118.19052\"] [\"34.11507\" \"-118.19114\"] [\"34.11506\" \"-118.19115\"] [\"34.11506\" \"-118.19115\"] [\"34.11511\" \"-118.19153\"] [\"34.11511\" \"-118.19153\"] [\"34.11511\" \"-118.19153\"] [\"34.11697\" \"-118.19561\"] [\"34.11697\" \"-118.19561\"] [\"34.11697\" \"-118.19561\"] [\"34.11697\" \"-118.19561\"] [\"34.11697\" \"-118.19561\"] [\"34.11697\" \"-118.19561\"] [\"34.11749\" \"-118.19574\"] [\"34.11748\" \"-118.19572\"] [\"34.11748\" \"-118.19572\"] [\"34.11748\" \"-118.19572\"] [\"34.11749\" \"-118.19596\"] [\"34.11748\" \"-118.19601\"] [\"34.11748\" \"-118.19601\"] [\"34.11748\" \"-118.19601\"] [\"34.11748\" \"-118.19601\"] [\"34.11748\" \"-118.19601\"] [\"34.11748\" \"-118.19601\"] [\"34.11748\" \"-118.19601\"] [\"34.11836\" \"-118.19815\"] [\"34.11836\" \"-118.19815\"] [\"34.11836\" \"-118.19815\"] [\"34.11836\" \"-118.19815\"] [\"34.11836\" \"-118.19815\"] [\"34.11836\" \"-118.19815\"] [\"34.11836\" \"-118.19815\"] [\"34.11836\" \"-118.19815\"] [\"34.11836\" \"-118.19815\"] [\"34.11836\" \"-118.19815\"] [\"34.11836\" \"-118.19815\"] [\"34.11836\" \"-118.19815\"] [\"34.11841\" \"-118.19881\"] [\"34.11841\" \"-118.19881\"] [\"34.11841\" \"-118.19881\"] [\"34.11841\" \"-118.19881\"] [\"34.11841\" \"-118.19881\"] [\"34.11841\" \"-118.19881\"] [\"34.11841\" \"-118.19881\"] [\"34.11748\" \"-118.19601\"] [\"34.11748\" \"-118.19601\"] [\"34.11748\" \"-118.19601\"] [\"34.11937\" \"-118.20157\"] [\"34.11935\" \"-118.20156\"] [\"34.11935\" \"-118.20156\"] [\"34.11935\" \"-118.20156\"] [\"34.11935\" \"-118.20156\"] [\"34.11935\" \"-118.20156\"] [\"34.11935\" \"-118.20156\"] [\"34.11935\" \"-118.20156\"] [\"34.11935\" \"-118.20156\"] [\"34.11935\" \"-118.20156\"] [\"34.12006\" \"-118.20392\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12004\" \"-118.20391\"] [\"34.12312\" \"-118.21747\"] [\"34.12312\" \"-118.21747\"] [\"34.12312\" \"-118.21747\"] [\"34.12294\" \"-118.21766\"] [\"34.12298\" \"-118.21764\"] [\"34.12298\" \"-118.21764\"] [\"34.12298\" \"-118.21764\"] [\"34.12298\" \"-118.21764\"] [\"34.12298\" \"-118.21764\"] [\"34.12298\" \"-118.21764\"] [\"34.12298\" \"-118.21764\"] [\"34.12298\" \"-118.21764\"] [\"34.12298\" \"-118.21764\"] [\"34.12298\" \"-118.21764\"] [\"34.12280\" \"-118.21816\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.12279\" \"-118.21815\"] [\"34.11520\" \"-118.23116\"] [\"34.11520\" \"-118.23114\"] [\"34.11520\" \"-118.23114\"] [\"34.11520\" \"-118.23114\"] [\"34.11520\" \"-118.23114\"] [\"34.11456\" \"-118.23178\"] [\"34.11456\" \"-118.23178\"] [\"34.11456\" \"-118.23178\"] [\"34.11399\" \"-118.23177\"] [\"34.11399\" \"-118.23177\"] [\"34.11360\" \"-118.23167\"] [\"34.11362\" \"-118.23166\"] [\"34.11362\" \"-118.23166\"] [\"34.11362\" \"-118.23166\"] [\"34.10398\" \"-118.23315\"] [\"34.10398\" \"-118.23315\"] [\"34.10257\" \"-118.23318\"] [\"34.10259\" \"-118.23315\"] [\"34.10259\" \"-118.23315\"] [\"34.10211\" \"-118.23296\"] [\"34.10207\" \"-118.23298\"] [\"34.10207\" \"-118.23298\"] [\"34.09950\" \"-118.23324\"] [\"34.09947\" \"-118.23320\"] [\"34.09804\" \"-118.23318\"] [\"34.09802\" \"-118.23320\"] [\"34.09802\" \"-118.23320\"] [\"34.09708\" \"-118.23341\"] [\"34.09709\" \"-118.23338\"] [\"34.09709\" \"-118.23338\"] [\"34.09671\" \"-118.23329\"] [\"34.09672\" \"-118.23332\"] [\"34.09672\" \"-118.23332\"] [\"34.09433\" \"-118.23324\"] [\"34.09435\" \"-118.23320\"] [\"34.09435\" \"-118.23320\"] [\"34.09337\" \"-118.23335\"] [\"34.09337\" \"-118.23338\"] [\"34.09337\" \"-118.23338\"] [\"34.09268\" \"-118.23329\"] [\"34.09267\" \"-118.23332\"] [\"34.09267\" \"-118.23332\"] [\"34.09213\" \"-118.23357\"] [\"34.09211\" \"-118.23360\"] [\"34.09211\" \"-118.23360\"] [\"34.09103\" \"-118.23385\"] [\"34.09103\" \"-118.23385\"] [\"34.08667\" \"-118.23641\"] [\"34.08667\" \"-118.23641\"] [\"34.08646\" \"-118.23683\"] [\"34.08648\" \"-118.23687\"] [\"34.08648\" \"-118.23687\"] [\"34.08463\" \"-118.23817\"] [\"34.08462\" \"-118.23818\"] [\"34.08462\" \"-118.23818\"] [\"34.08357\" \"-118.23890\"] [\"34.08355\" \"-118.23887\"] [\"34.08355\" \"-118.23887\"] [\"34.08321\" \"-118.23890\"] [\"34.08322\" \"-118.23893\"] [\"34.08322\" \"-118.23893\"] [\"34.08293\" \"-118.23935\"] [\"34.08294\" \"-118.23938\"] [\"34.08294\" \"-118.23938\"] [\"34.08252\" \"-118.23957\"] [\"34.08252\" \"-118.23956\"] [\"34.08252\" \"-118.23956\"] [\"34.08069\" \"-118.24080\"] [\"34.08066\" \"-118.24081\"] [\"34.08066\" \"-118.24081\"] [\"34.07996\" \"-118.24153\"] [\"34.07996\" \"-118.24153\"] [\"34.07996\" \"-118.24153\"] [\"34.07749\" \"-118.24293\"] [\"34.07749\" \"-118.24293\"] [\"34.07707\" \"-118.24316\"] [\"34.07708\" \"-118.24316\"] [\"34.07708\" \"-118.24316\"] [\"34.07634\" \"-118.24378\"] [\"34.07633\" \"-118.24373\"] [\"34.07633\" \"-118.24373\"] [\"34.07309\" \"-118.24686\"] [\"34.07307\" \"-118.24682\"] [\"34.07307\" \"-118.24682\"] [\"34.07281\" \"-118.24725\"] [\"34.07279\" \"-118.24728\"] [\"34.07279\" \"-118.24728\"] [\"34.07279\" \"-118.24728\"] [\"34.07057\" \"-118.24989\"] [\"34.07061\" \"-118.24986\"] [\"34.07061\" \"-118.24986\"] [\"34.06989\" \"-118.25061\"] [\"34.06991\" \"-118.25060\"] [\"34.06991\" \"-118.25060\"] [\"34.06947\" \"-118.25089\"] [\"34.06944\" \"-118.25094\"] [\"34.06944\" \"-118.25094\"] [\"34.06801\" \"-118.25274\"] [\"34.06800\" \"-118.25277\"] [\"34.06800\" \"-118.25277\"] [\"34.06800\" \"-118.25277\"] [\"34.06800\" \"-118.25277\"] [\"34.06650\" \"-118.25342\"] [\"34.06651\" \"-118.25340\"] [\"34.06651\" \"-118.25340\"] [\"34.06416\" \"-118.25650\"] [\"34.06418\" \"-118.25649\"] [\"34.06418\" \"-118.25649\"] [\"34.06256\" \"-118.25745\"] [\"34.06255\" \"-118.25747\"] [\"34.06255\" \"-118.25747\"] [\"34.06219\" \"-118.25796\"] [\"34.06218\" \"-118.25792\"] [\"34.06218\" \"-118.25792\"] [\"34.05853\" \"-118.26317\"] [\"34.05855\" \"-118.26319\"] [\"34.05855\" \"-118.26319\"] [\"34.05798\" \"-118.26418\"] [\"34.05799\" \"-118.26416\"] [\"34.05799\" \"-118.26416\"] [\"34.05565\" \"-118.26693\"] [\"34.05566\" \"-118.26696\"] [\"34.05566\" \"-118.26696\"] [\"34.05510\" \"-118.26765\"] [\"34.05510\" \"-118.26771\"] [\"34.05510\" \"-118.26771\"] [\"34.05510\" \"-118.26771\"] [\"34.05143\" \"-118.27194\"] [\"34.05143\" \"-118.27194\"] [\"34.05143\" \"-118.27194\"] [\"34.02173\" \"-118.30141\"] [\"34.02173\" \"-118.30141\"] [\"34.01770\" \"-118.30566\"] [\"34.01768\" \"-118.30570\"] [\"34.01768\" \"-118.30570\"] [\"34.01729\" \"-118.30364\"] [\"34.01730\" \"-118.30364\"] [\"34.01730\" \"-118.30364\"] [\"34.01697\" \"-118.30314\"] [\"34.01698\" \"-118.30318\"] [\"34.01698\" \"-118.30318\"] [\"34.01698\" \"-118.30318\"] [\"34.01698\" \"-118.30318\"] [\"34.01852\" \"-118.30201\"] [\"34.01851\" \"-118.30204\"] [\"34.01851\" \"-118.30204\"] [\"34.01851\" \"-118.30204\"] [\"34.01851\" \"-118.30204\"] [\"34.02024\" \"-118.30364\"] [\"34.02024\" \"-118.30364\"] [\"34.02003\" \"-118.30342\"] [\"34.02005\" \"-118.30341\"] [\"34.02005\" \"-118.30341\"] [\"34.01889\" \"-118.30168\"] [\"34.01889\" \"-118.30170\"] [\"34.01889\" \"-118.30170\"] [\"34.01880\" \"-118.30084\"] [\"34.01884\" \"-118.30084\"] [\"34.01884\" \"-118.30084\"] [\"34.01921\" \"-118.30084\"] [\"34.01921\" \"-118.30084\"] [\"34.01921\" \"-118.30084\"] [\"34.01949\" \"-118.30238\"] [\"34.01949\" \"-118.30238\"] [\"34.01917\" \"-118.30173\"] [\"34.01917\" \"-118.30175\"] [\"34.01917\" \"-118.30175\"] [\"34.01930\" \"-118.30151\"] [\"34.01930\" \"-118.30151\"] [\"34.01930\" \"-118.30151\"] [\"34.01991\" \"-118.30095\"] [\"34.01991\" \"-118.30095\"] [\"34.02013\" \"-118.30218\"] [\"34.02014\" \"-118.30215\"] [\"34.02014\" \"-118.30215\"] [\"34.02013\" \"-118.30246\"] [\"34.02014\" \"-118.30250\"] [\"34.02014\" \"-118.30250\"] [\"34.02003\" \"-118.30241\"] [\"34.02005\" \"-118.30244\"] [\"34.02005\" \"-118.30244\"] [\"34.02005\" \"-118.30244\"] [\"34.02005\" \"-118.30244\"] [\"34.01953\" \"-118.30190\"] [\"34.01954\" \"-118.30187\"] [\"34.01954\" \"-118.30187\"] [\"34.01944\" \"-118.30179\"] [\"34.01944\" \"-118.30175\"] [\"34.01944\" \"-118.30175\"] [\"34.01930\" \"-118.30123\"] [\"34.01926\" \"-118.30124\"] [\"34.01926\" \"-118.30124\"] [\"34.01926\" \"-118.30089\"] [\"34.01926\" \"-118.30090\"] [\"34.01926\" \"-118.30090\"] [\"34.01921\" \"-118.30084\"] [\"34.01921\" \"-118.30084\"] [\"34.01921\" \"-118.30084\"] [\"34.01921\" \"-118.30084\"] [\"34.01967\" \"-118.30028\"] [\"34.01968\" \"-118.30027\"] [\"34.01968\" \"-118.30027\"] [\"34.01985\" \"-118.30016\"] [\"34.01985\" \"-118.30016\"] [\"34.01985\" \"-118.30016\"] [\"34.01996\" \"-118.30050\"] [\"34.01996\" \"-118.30050\"] [\"34.01996\" \"-118.30050\"] [\"34.01996\" \"-118.30050\"] [\"34.01962\" \"-118.30073\"] [\"34.01963\" \"-118.30072\"] [\"34.01963\" \"-118.30072\"] [\"34.01939\" \"-118.30050\"] [\"34.01939\" \"-118.30050\"] [\"34.01935\" \"-118.30038\"] [\"34.01935\" \"-118.30038\"] [\"34.01935\" \"-118.30038\"] [\"34.01935\" \"-118.30038\"] [\"34.01976\" \"-118.29944\"] [\"34.01972\" \"-118.29941\"] [\"34.01972\" \"-118.29941\"] [\"34.01985\" \"-118.29938\"] [\"34.01982\" \"-118.29941\"] [\"34.01982\" \"-118.29941\"] [\"34.01982\" \"-118.29941\"] [\"34.01958\" \"-118.30005\"] [\"34.01958\" \"-118.30004\"] [\"34.01958\" \"-118.30004\"] [\"34.01935\" \"-118.29972\"] [\"34.01930\" \"-118.29969\"] [\"34.01930\" \"-118.29969\"] [\"34.01935\" \"-118.29960\"] [\"34.01935\" \"-118.29964\"] [\"34.01935\" \"-118.29964\"] [\"34.01930\" \"-118.29927\"] [\"34.01930\" \"-118.29924\"] [\"34.01930\" \"-118.29924\"] [\"34.01944\" \"-118.29927\"] [\"34.01944\" \"-118.29929\"] [\"34.01944\" \"-118.29929\"] [\"34.01944\" \"-118.29929\"] [\"34.01944\" \"-118.29929\"] [\"34.01958\" \"-118.29977\"] [\"34.01958\" \"-118.29975\"] [\"34.01958\" \"-118.29975\"] [\"34.01953\" \"-118.30000\"] [\"34.01949\" \"-118.29998\"] [\"34.01958\" \"-118.30039\"] [\"34.01954\" \"-118.30038\"] [\"34.01954\" \"-118.30038\"] [\"34.01944\" \"-118.30056\"] [\"34.01944\" \"-118.30055\"] [\"34.01944\" \"-118.30055\"] [\"34.01889\" \"-118.30039\"] [\"34.01889\" \"-118.30038\"] [\"34.01889\" \"-118.30038\"] [\"34.01889\" \"-118.30038\"] [\"34.01926\" \"-118.29912\"] [\"34.01926\" \"-118.29912\"] [\"34.01926\" \"-118.29912\"] [\"34.01926\" \"-118.29912\"] [\"34.01926\" \"-118.29912\"] [\"34.01935\" \"-118.30011\"] [\"34.01935\" \"-118.30009\"] [\"34.01935\" \"-118.30009\"] [\"34.01935\" \"-118.30009\"] [\"34.01871\" \"-118.30044\"] [\"34.01870\" \"-118.30050\"] [\"34.01870\" \"-118.30050\"] [\"34.01870\" \"-118.30050\"] [\"34.01870\" \"-118.30050\"] [\"34.01793\" \"-118.29994\"] [\"34.01795\" \"-118.29992\"] [\"34.01795\" \"-118.29992\"] [\"34.01793\" \"-118.29938\"] [\"34.01786\" \"-118.29912\"] [\"34.01786\" \"-118.29912\"] [\"34.01786\" \"-118.29912\"] [\"34.01982\" \"-118.29992\"] [\"34.01982\" \"-118.29992\"] [\"34.01990\" \"-118.30089\"] [\"34.01991\" \"-118.30090\"] [\"34.01991\" \"-118.30090\"] [\"34.01999\" \"-118.30151\"] [\"34.01996\" \"-118.30153\"] [\"34.01996\" \"-118.30153\"] [\"34.02013\" \"-118.30207\"] [\"34.02014\" \"-118.30210\"] [\"34.02014\" \"-118.30210\"] [\"34.01917\" \"-118.30207\"] [\"34.01917\" \"-118.30210\"] [\"34.01917\" \"-118.30210\"] [\"34.01917\" \"-118.30196\"] [\"34.01917\" \"-118.30193\"] [\"34.01917\" \"-118.30193\"] [\"34.01894\" \"-118.30101\"] [\"34.01893\" \"-118.30101\"] [\"34.01893\" \"-118.30101\"] [\"34.01917\" \"-118.30039\"] [\"34.01917\" \"-118.30038\"] [\"34.01917\" \"-118.30038\"] [\"34.01917\" \"-118.30038\"] [\"34.01917\" \"-118.30038\"] [\"34.01958\" \"-118.30022\"] [\"34.01958\" \"-118.30027\"] [\"34.01958\" \"-118.30027\"] [\"34.01967\" \"-118.30039\"] [\"34.01968\" \"-118.30038\"] [\"34.01968\" \"-118.30038\"] [\"34.01990\" \"-118.30050\"] [\"34.01991\" \"-118.30050\"] [\"34.01991\" \"-118.30050\"] [\"34.01994\" \"-118.30168\"] [\"34.01996\" \"-118.30170\"] [\"34.01996\" \"-118.30170\"] [\"34.01996\" \"-118.30170\"] [\"34.01935\" \"-118.30263\"] [\"34.01935\" \"-118.30261\"] [\"34.01935\" \"-118.30261\"] [\"34.01898\" \"-118.30274\"] [\"34.01898\" \"-118.30278\"] [\"34.01898\" \"-118.30278\"] [\"34.01857\" \"-118.30218\"] [\"34.01861\" \"-118.30221\"] [\"34.01861\" \"-118.30221\"] [\"34.01862\" \"-118.30207\"] [\"34.01861\" \"-118.30204\"] [\"34.01861\" \"-118.30204\"] [\"34.01852\" \"-118.30129\"] [\"34.01851\" \"-118.30130\"] [\"34.01851\" \"-118.30130\"] [\"34.01851\" \"-118.30130\"] [\"34.01963\" \"-118.30050\"] [\"34.01963\" \"-118.30050\"] [\"34.01994\" \"-118.30151\"] [\"34.01996\" \"-118.30153\"] [\"34.01996\" \"-118.30153\"] [\"34.01999\" \"-118.30185\"] [\"34.02000\" \"-118.30187\"] [\"34.02000\" \"-118.30187\"] [\"34.01939\" \"-118.30229\"] [\"34.01940\" \"-118.30233\"] [\"34.01940\" \"-118.30233\"] [\"34.01940\" \"-118.30233\"] [\"34.01940\" \"-118.30233\"] [\"34.01921\" \"-118.30224\"] [\"34.01921\" \"-118.30227\"] [\"34.01921\" \"-118.30227\"] [\"34.01903\" \"-118.30185\"] [\"34.01903\" \"-118.30187\"] [\"34.01903\" \"-118.30187\"] [\"34.01917\" \"-118.30033\"] [\"34.01917\" \"-118.30032\"] [\"34.01912\" \"-118.30028\"] [\"34.01912\" \"-118.30027\"] [\"34.01912\" \"-118.30027\"] [\"34.01967\" \"-118.29960\"] [\"34.01963\" \"-118.29958\"] [\"34.01963\" \"-118.29958\"] [\"34.02003\" \"-118.29966\"] [\"34.02005\" \"-118.29964\"] [\"34.02005\" \"-118.29964\"] [\"34.02005\" \"-118.29964\"] [\"34.02005\" \"-118.29964\"] [\"34.02072\" \"-118.30257\"] [\"34.02070\" \"-118.30256\"] [\"34.02070\" \"-118.30256\"] [\"34.01884\" \"-118.30235\"] [\"34.01884\" \"-118.30233\"] [\"34.01884\" \"-118.30233\"] [\"34.01807\" \"-118.30123\"] [\"34.01805\" \"-118.30124\"] [\"34.01805\" \"-118.30124\"] [\"34.01805\" \"-118.30124\"] [\"34.01944\" \"-118.29889\"] [\"34.01944\" \"-118.29889\"] [\"34.01994\" \"-118.29876\"] [\"34.01996\" \"-118.29872\"] [\"34.01996\" \"-118.29872\"] [\"34.01996\" \"-118.29872\"] [\"34.01847\" \"-118.30359\"] [\"34.01847\" \"-118.30359\"] [\"34.01847\" \"-118.30359\"] [\"34.01847\" \"-118.30359\"] [\"34.00964\" \"-118.30386\"] [\"34.00967\" \"-118.30387\"] [\"34.00967\" \"-118.30387\"] [\"34.00967\" \"-118.30387\"] [\"34.00967\" \"-118.30387\"] [\"34.01032\" \"-118.31017\"] [\"34.01060\" \"-118.31048\"] [\"34.01060\" \"-118.31045\"] [\"34.01060\" \"-118.31045\"] [\"34.00159\" \"-118.32488\"] [\"34.00040\" \"-118.32207\"] [\"34.00040\" \"-118.32207\"] [\"34.00035\" \"-118.32247\"] [\"34.00036\" \"-118.32247\"] [\"34.00026\" \"-118.32253\"] [\"34.00026\" \"-118.32253\"] [\"34.00026\" \"-118.32253\"] [\"34.00026\" \"-118.32253\"] [\"33.99976\" \"-118.32320\"] [\"33.99975\" \"-118.32321\"] [\"33.99975\" \"-118.32321\"] [\"33.99953\" \"-118.32376\"] [\"33.99957\" \"-118.32373\"] [\"33.99957\" \"-118.32373\"] [\"33.99916\" \"-118.32348\"] [\"33.99919\" \"-118.32350\"] [\"33.99919\" \"-118.32350\"] [\"33.99692\" \"-118.32208\"] [\"33.99691\" \"-118.32207\"] [\"33.99691\" \"-118.32207\"] [\"33.99696\" \"-118.32079\"] [\"33.99696\" \"-118.32075\"] [\"33.99696\" \"-118.32075\"] [\"33.99852\" \"-118.31704\"] [\"33.99850\" \"-118.31703\"] [\"33.99850\" \"-118.31703\"] [\"34.00394\" \"-118.31709\"] [\"34.00394\" \"-118.31709\"] [\"34.00433\" \"-118.31788\"] [\"34.00436\" \"-118.31789\"] [\"34.00436\" \"-118.31789\"] [\"34.00415\" \"-118.31827\"] [\"34.00418\" \"-118.31829\"] [\"34.00418\" \"-118.31829\"] [\"34.00378\" \"-118.31939\"] [\"34.00376\" \"-118.31938\"] [\"34.00376\" \"-118.31938\"] [\"34.00376\" \"-118.31938\"] [\"34.00376\" \"-118.31938\"] [\"34.00376\" \"-118.31938\"] [\"33.99943\" \"-118.31898\"] [\"33.99943\" \"-118.31898\"] [\"33.99943\" \"-118.31898\"] [\"33.99943\" \"-118.31898\"] [\"33.99882\" \"-118.31594\"] [\"33.99882\" \"-118.31594\"] [\"33.99852\" \"-118.31446\"] [\"33.99854\" \"-118.31446\"] [\"33.99854\" \"-118.31446\"] [\"33.99811\" \"-118.31401\"] [\"33.99812\" \"-118.31406\"] [\"33.99812\" \"-118.31406\"] [\"33.99774\" \"-118.31199\"] [\"33.99774\" \"-118.31199\"] [\"33.99743\" \"-118.31039\"] [\"33.99743\" \"-118.31039\"] [\"33.99728\" \"-118.30997\"] [\"33.99729\" \"-118.30999\"] [\"33.99729\" \"-118.30999\"] [\"33.99729\" \"-118.30999\"] [\"33.99692\" \"-118.30801\"] [\"33.99691\" \"-118.30799\"] [\"33.99691\" \"-118.30799\"] [\"33.99669\" \"-118.30740\"] [\"33.99673\" \"-118.30742\"] [\"33.99673\" \"-118.30742\"] [\"33.99655\" \"-118.30667\"] [\"33.99654\" \"-118.30662\"] [\"33.99654\" \"-118.30662\"] [\"33.99654\" \"-118.30662\"] [\"33.99641\" \"-118.30594\"] [\"33.99645\" \"-118.30599\"] [\"33.99645\" \"-118.30599\"] [\"33.99605\" \"-118.30437\"] [\"33.99605\" \"-118.30437\"] [\"33.99547\" \"-118.30256\"] [\"33.99518\" \"-118.30252\"] [\"33.99519\" \"-118.30250\"] [\"33.99519\" \"-118.30250\"] [\"33.99426\" \"-118.29893\"] [\"33.99426\" \"-118.29895\"] [\"33.99426\" \"-118.29895\"] [\"33.99413\" \"-118.29860\"] [\"33.99412\" \"-118.29861\"] [\"33.99412\" \"-118.29861\"] [\"33.99371\" \"-118.29719\"] [\"33.99370\" \"-118.29718\"] [\"33.99370\" \"-118.29718\"] [\"33.99353\" \"-118.29708\"] [\"33.99356\" \"-118.29706\"] [\"33.99356\" \"-118.29706\"] [\"33.99353\" \"-118.29669\"] [\"33.99351\" \"-118.29672\"] [\"33.99351\" \"-118.29672\"] [\"33.99351\" \"-118.29672\"] [\"33.99351\" \"-118.29672\"] [\"33.98541\" \"-118.28762\"] [\"33.98541\" \"-118.28762\"] [\"33.98520\" \"-118.28733\"] [\"33.98523\" \"-118.28733\"] [\"33.98523\" \"-118.28733\"] [\"33.98428\" \"-118.28654\"] [\"33.98430\" \"-118.28659\"] [\"33.98430\" \"-118.28659\"] [\"33.98378\" \"-118.28638\"] [\"33.98379\" \"-118.28636\"] [\"33.98379\" \"-118.28636\"] [\"33.98379\" \"-118.28636\"] [\"33.97638\" \"-118.28144\"] [\"33.97638\" \"-118.28144\"] [\"33.97549\" \"-118.28077\"] [\"33.97550\" \"-118.28081\"] [\"33.97550\" \"-118.28081\"] [\"33.97527\" \"-118.28055\"] [\"33.97527\" \"-118.28053\"] [\"33.97527\" \"-118.28053\"] [\"33.97527\" \"-118.28053\"] [\"33.97348\" \"-118.27802\"] [\"33.97345\" \"-118.27806\"] [\"33.97345\" \"-118.27806\"] [\"33.97302\" \"-118.27696\"] [\"33.97303\" \"-118.27692\"] [\"33.97303\" \"-118.27692\"] [\"33.97303\" \"-118.27692\"] [\"33.97303\" \"-118.27692\"] [\"33.97192\" \"-118.26334\"] [\"33.97191\" \"-118.26336\"] [\"33.97275\" \"-118.26227\"] [\"33.97275\" \"-118.26227\"] [\"33.97275\" \"-118.26227\"] [\"33.97302\" \"-118.26160\"] [\"33.97303\" \"-118.26159\"] [\"33.97303\" \"-118.26159\"] [\"33.97303\" \"-118.26159\"] [\"33.97303\" \"-118.26159\"] [\"33.97307\" \"-118.26003\"] [\"33.97308\" \"-118.26004\"] [\"33.97308\" \"-118.26004\"] [\"33.97435\" \"-118.25728\"] [\"33.97434\" \"-118.25729\"] [\"33.97434\" \"-118.25729\"] [\"33.97476\" \"-118.25700\"] [\"33.97475\" \"-118.25701\"] [\"33.97475\" \"-118.25701\"] [\"33.97475\" \"-118.25701\"] [\"33.97475\" \"-118.25701\"] [\"33.97691\" \"-118.25459\"] [\"33.97694\" \"-118.25460\"] [\"33.97694\" \"-118.25460\"] [\"33.97842\" \"-118.25476\"] [\"33.97843\" \"-118.25472\"] [\"33.97843\" \"-118.25472\"] [\"33.97879\" \"-118.25459\"] [\"33.97880\" \"-118.25460\"] [\"33.97880\" \"-118.25460\"] [\"33.98190\" \"-118.25476\"] [\"33.98192\" \"-118.25478\"] [\"33.98192\" \"-118.25478\"] [\"33.98218\" \"-118.25465\"] [\"33.98220\" \"-118.25466\"] [\"33.98220\" \"-118.25466\"] [\"33.98456\" \"-118.25532\"] [\"33.98453\" \"-118.25529\"] [\"33.98453\" \"-118.25529\"] [\"33.98453\" \"-118.25529\"] [\"33.98593\" \"-118.25594\"] [\"33.98593\" \"-118.25598\"] [\"33.98593\" \"-118.25598\"] [\"33.98712\" \"-118.25700\"] [\"33.98714\" \"-118.25701\"] [\"33.98714\" \"-118.25701\"] [\"33.98740\" \"-118.25734\"] [\"33.98742\" \"-118.25729\"] [\"33.98742\" \"-118.25729\"] [\"33.98742\" \"-118.25729\"] [\"33.98742\" \"-118.25729\"] [\"33.99074\" \"-118.26076\"] [\"33.99072\" \"-118.26078\"] [\"33.99072\" \"-118.26078\"] [\"33.99106\" \"-118.26121\"] [\"33.99105\" \"-118.26118\"] [\"33.99105\" \"-118.26118\"] [\"33.99197\" \"-118.26199\"] [\"33.99198\" \"-118.26199\"] [\"33.99198\" \"-118.26199\"] [\"33.99239\" \"-118.26239\"] [\"33.99240\" \"-118.26239\"] [\"33.99240\" \"-118.26239\"] [\"33.99240\" \"-118.26239\"] [\"33.99240\" \"-118.26239\"] [\"33.99527\" \"-118.26474\"] [\"33.99528\" \"-118.26473\"] [\"33.99528\" \"-118.26473\"] [\"33.99559\" \"-118.26513\"] [\"33.99561\" \"-118.26513\"] [\"33.99561\" \"-118.26513\"] [\"33.99834\" \"-118.26782\"] [\"33.99834\" \"-118.26782\"] [\"33.99834\" \"-118.26782\"] [\"34.00054\" \"-118.26994\"] [\"34.00054\" \"-118.26994\"] [\"34.00191\" \"-118.27124\"] [\"34.00194\" \"-118.27126\"] [\"34.00319\" \"-118.27219\"] [\"34.00320\" \"-118.27223\"] [\"34.00320\" \"-118.27223\"] [\"34.00356\" \"-118.27247\"] [\"34.00357\" \"-118.27251\"] [\"34.00357\" \"-118.27251\"] [\"34.00438\" \"-118.27337\"] [\"34.00441\" \"-118.27337\"] [\"34.00441\" \"-118.27337\"] [\"34.00539\" \"-118.27388\"] [\"34.00539\" \"-118.27388\"] [\"34.00678\" \"-118.27475\"] [\"34.00678\" \"-118.27475\"] [\"34.00735\" \"-118.27517\"] [\"34.00739\" \"-118.27515\"] [\"34.00739\" \"-118.27515\"] [\"34.00873\" \"-118.27578\"] [\"34.00874\" \"-118.27578\"] [\"34.00874\" \"-118.27578\"] [\"34.01093\" \"-118.27741\"] [\"34.01093\" \"-118.27738\"] [\"34.01093\" \"-118.27738\"] [\"34.01093\" \"-118.27738\"] [\"34.01408\" \"-118.27937\"] [\"34.01409\" \"-118.27938\"] [\"34.01409\" \"-118.27938\"] [\"34.01468\" \"-118.27948\"] [\"34.01470\" \"-118.27950\"] [\"34.01470\" \"-118.27950\"] [\"34.01839\" \"-118.28083\"] [\"34.01839\" \"-118.28083\"] [\"34.01839\" \"-118.28083\"] [\"34.02107\" \"-118.28184\"] [\"34.02107\" \"-118.28184\"] [\"34.02296\" \"-118.28234\"] [\"34.02298\" \"-118.28236\"] [\"34.02298\" \"-118.28236\"] [\"34.02324\" \"-118.28240\"] [\"34.02322\" \"-118.28236\"] [\"34.02322\" \"-118.28236\"] [\"34.02686\" \"-118.28363\"] [\"34.02685\" \"-118.28367\"] [\"34.02685\" \"-118.28367\"] [\"34.02736\" \"-118.28374\"] [\"34.02736\" \"-118.28373\"] [\"34.02736\" \"-118.28373\"] [\"34.02887\" \"-118.28436\"] [\"34.02889\" \"-118.28436\"] [\"34.02889\" \"-118.28436\"] [\"34.02933\" \"-118.28447\"] [\"34.02936\" \"-118.28447\"] [\"34.02936\" \"-118.28447\"] [\"34.02936\" \"-118.28447\"] [\"34.03152\" \"-118.28520\"] [\"34.03152\" \"-118.28520\"] [\"34.03825\" \"-118.28716\"] [\"34.03825\" \"-118.28716\"] [\"34.04160\" \"-118.28800\"] [\"34.04160\" \"-118.28796\"] [\"34.04160\" \"-118.28796\"] [\"34.04160\" \"-118.28796\"] [\"34.04160\" \"-118.28796\"] [\"34.04393\" \"-118.28856\"] [\"34.04393\" \"-118.28854\"] [\"34.04393\" \"-118.28854\"] [\"34.04439\" \"-118.28856\"] [\"34.04440\" \"-118.28859\"] [\"34.04440\" \"-118.28859\"] [\"34.04604\" \"-118.28907\"] [\"34.04603\" \"-118.28905\"] [\"34.04603\" \"-118.28905\"] [\"34.04842\" \"-118.28979\"] [\"34.04840\" \"-118.28979\"] [\"34.05089\" \"-118.28979\"] [\"34.05091\" \"-118.28979\"] [\"34.05091\" \"-118.28979\"] [\"34.05496\" \"-118.28985\"] [\"34.05496\" \"-118.28985\"] [\"34.05496\" \"-118.28985\"] [\"34.05519\" \"-118.28985\"] [\"34.05520\" \"-118.28985\"] [\"34.05520\" \"-118.28985\"] [\"34.05520\" \"-118.28985\"] [\"34.06860\" \"-118.29340\"] [\"34.06860\" \"-118.29340\"] [\"34.06828\" \"-118.29400\"] [\"34.06828\" \"-118.29403\"] [\"34.06828\" \"-118.29403\"] [\"34.06750\" \"-118.29703\"] [\"34.06753\" \"-118.29700\"] [\"34.06659\" \"-118.29792\"] [\"34.06656\" \"-118.29792\"] [\"34.06656\" \"-118.29792\"] [\"34.06544\" \"-118.29815\"] [\"34.06544\" \"-118.29815\"] [\"34.06544\" \"-118.29815\"] [\"34.06284\" \"-118.29764\"] [\"34.06283\" \"-118.29763\"] [\"34.06283\" \"-118.29763\"] [\"34.06261\" \"-118.29703\"] [\"34.06264\" \"-118.29706\"] [\"34.06264\" \"-118.29706\"] [\"34.06123\" \"-118.29635\"] [\"34.06120\" \"-118.29632\"] [\"34.06120\" \"-118.29632\"] [\"34.06100\" \"-118.29562\"] [\"34.06102\" \"-118.29563\"] [\"34.06102\" \"-118.29563\"] [\"34.06119\" \"-118.29546\"] [\"34.06120\" \"-118.29546\"] [\"34.06120\" \"-118.29546\"] [\"34.06120\" \"-118.29546\"] [\"34.06133\" \"-118.29114\"] [\"34.06134\" \"-118.29111\"] [\"34.06134\" \"-118.29111\"] [\"34.06572\" \"-118.29036\"] [\"34.06572\" \"-118.29037\"] [\"34.06572\" \"-118.29037\"] [\"34.06686\" \"-118.29305\"] [\"34.06688\" \"-118.29306\"] [\"34.06688\" \"-118.29306\"] [\"34.06686\" \"-118.29344\"] [\"34.06683\" \"-118.29340\"] [\"34.06683\" \"-118.29340\"] [\"34.06531\" \"-118.29590\"] [\"34.06530\" \"-118.29592\"] [\"34.06530\" \"-118.29592\"] [\"34.06530\" \"-118.29592\"] [\"34.06278\" \"-118.29334\"] [\"34.06278\" \"-118.29334\"] [\"34.06278\" \"-118.29334\"] [\"34.06278\" \"-118.29334\"] [\"34.06278\" \"-118.29334\"] [\"34.06563\" \"-118.29170\"] [\"34.06563\" \"-118.29170\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.08728\" \"-118.33615\"] [\"34.05897\" \"-118.27286\"] [\"34.05897\" \"-118.27286\"] [\"34.06000\" \"-118.27292\"] [\"34.05999\" \"-118.27297\"] [\"34.05999\" \"-118.27297\"] [\"34.06068\" \"-118.27376\"] [\"34.06069\" \"-118.27372\"] [\"34.06069\" \"-118.27372\"] [\"34.06096\" \"-118.27388\"] [\"34.06097\" \"-118.27389\"] [\"34.06097\" \"-118.27389\"] [\"34.06097\" \"-118.27389\"] [\"34.07331\" \"-118.27045\"] [\"34.07331\" \"-118.27045\"] [\"34.07387\" \"-118.27051\"] [\"34.07386\" \"-118.27051\"] [\"34.07386\" \"-118.27051\"] [\"34.07433\" \"-118.27029\"] [\"34.07433\" \"-118.27028\"] [\"34.07433\" \"-118.27028\"] [\"34.07542\" \"-118.26984\"] [\"34.07540\" \"-118.26988\"] [\"34.07540\" \"-118.26988\"] [\"34.07540\" \"-118.26988\"] [\"34.07540\" \"-118.26988\"] [\"34.07703\" \"-118.26911\"] [\"34.07703\" \"-118.26914\"] [\"34.07703\" \"-118.26914\"] [\"34.07758\" \"-118.26911\"] [\"34.07759\" \"-118.26914\"] [\"34.07759\" \"-118.26914\"] [\"34.07808\" \"-118.26889\"] [\"34.07805\" \"-118.26891\"] [\"34.07805\" \"-118.26891\"] [\"34.07977\" \"-118.26793\"] [\"34.07978\" \"-118.26794\"] [\"34.07978\" \"-118.26794\"] [\"34.07978\" \"-118.26794\"] [\"34.07978\" \"-118.26794\"] [\"34.08220\" \"-118.26575\"] [\"34.08220\" \"-118.26571\"] [\"34.08220\" \"-118.26571\"] [\"34.08252\" \"-118.26502\"] [\"34.08248\" \"-118.26502\"] [\"34.08248\" \"-118.26502\"] [\"34.08248\" \"-118.26502\"] [\"34.08271\" \"-118.25907\"] [\"34.08271\" \"-118.25907\"] [\"34.08238\" \"-118.25869\"] [\"34.08238\" \"-118.25867\"] [\"34.08238\" \"-118.25867\"] [\"34.08197\" \"-118.25807\"] [\"34.08196\" \"-118.25809\"] [\"34.08196\" \"-118.25809\"] [\"34.08023\" \"-118.25600\"] [\"34.08020\" \"-118.25603\"] [\"34.08020\" \"-118.25603\"] [\"34.08005\" \"-118.25571\"] [\"34.08006\" \"-118.25569\"] [\"34.08006\" \"-118.25569\"])}), :opts {:opacity 0.8}}"]
;; <=

;; **
;;; And its altitude profile:
;; **

;; @@ [clj]
;; (require '[gorilla-plot.core :as plot])
;; (plot/list-plot (map #(Long/parseLong (get % 7)) N662PD) :joined true)
;; @@

;; **
;;; For fun I [track nearby airplanes using a $20 RTL-SDR dongle](http://www.irrational.net/2012/08/06/tracking-planes-for-20-or-less/).  I keep a [PostGIS](http://postgis.net/) database of all the aircraft positions my little antenna picks up.
;;; 
;;; I was curious what the maximum range of my little antenna was.  The antenna can only pick up aircraft that are in line of sight, so if there's a mountain nearby I won't be able to pick up aircraft that are behind the mountain.
;;; 
;;; I can use PostGIS to compute the [concave hull](http://postgis.net/docs/ST_ConcaveHull.html) of all position reports and plot that using leaflet gorilla:
;; **

;; @@ [clj]
#_(require '[clojure.java.jdbc :as jdbc])

#_(def reception-area
  (jdbc/query
    "postgresql://localhost:5432/orbital"
    (str "select ST_AsGeoJSON(ST_ConcaveHull(ST_Collect(position), 0.99)) "
         "from reports_with_distance "
         ;; There are some bogus reports--filter out anything more than 300 miles from me.
         "where distance < 300 * 1609.34 "
         ;; And filter out anything with altitude <= 0.
         "and altitude > 0")))
;; @@

;; @@ [clj]
#_(lg/geo
  ;; My location.
  [:points [[34.133777, -118.192310]]]
  ;; The concave hull.
  [:geojson (:st_asgeojson (first reception-area))])
;; @@

;; @@ [clj]

;; @@
